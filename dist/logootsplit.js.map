{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 03449ab2f5ec2f8e4d10","webpack:///./src/index.js","webpack:///./src/Main/Const.js","webpack:///./src/Main/RemoteCommand.js","webpack:///./src/Main/LogootDoc/Base.js","webpack:///./src/Main/LogootDoc/CharId.js","webpack:///./src/Main/LogootDoc/Char.js","webpack:///./src/Main/LogootDoc/Document.js","webpack:///./src/Main/Algorithm.js"],"names":["window","Base","RemoteCommand","CharId","Char","Document","Algorithm","MIN_BASE_EL","MAX_BASE_EL","MIN_OFFSET","MAX_OFFSET","FIRST_ASSIGNED_OFFSET","Math","floor","str","id","sessionId","type","ids","main","clock","minUsedOffset","maxUsedOffset","otherBase","length","i","charId","thisId","fullBase","otherId","fullId","concat","slice","base","offset","otherChar","isEqual","otherCharId","min","copy","value","DOC_BEG","DOC_END","chars","bases","pos","logFunc","charWeAppendTo","firstOffset","insertStringWithExistingBase","charWePrependTo","insertStrAtPos","sortDocumentPart","addBase","firstCharOffset","char","newId","newChar","insertCharAtPos","getPosOfFirstCharWithBiggerId","sortBeg","sortEnd","temp","prevPos","isBigger","push","fromPos","toPos","delChar","splice","b","text","doc","idsOfCharsToDeleteLater","insertIntoDocument","createRemoteAddCommand","strId","createCharsFromStr","j","addChars","delIds","getCharIds","delIdsCopy","map","delChars","createRemoteDelCommand","getPosOfCharWithId","remoteDelCommand","makeDelCommand","session","getSameBase","canInsertAppended","insertStrAppended","canInsertPrepended","insertStrPrepended","insertStringWithNewBase","generateBaseAtPos","getCharAtPos","isSameSession","isHighestOffsetInBase","isSpaceInBaseAfter","isNotGoingToOverlapAfterApp","prevCharId","getIdOfCharAtPos","nextCharId","lastIdOfAppStr","isLowestOffsetInBase","isSpaceInBaseBefore","isNotGoingToOverlapAfterPrep","firstIdOfPrepStr","spaceLength","addId","remoteAddCommand","makeAddCommand","idLow","idHigh","low","high","getRandomElementBetween","idInsert","idNext","strLength","isPrefix","random"],"mappings":"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","file":"logootsplit.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"logootsplit\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"logootsplit\"] = factory();\n\telse\n\t\troot[\"logootsplit\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 03449ab2f5ec2f8e4d10\n **/","\r\nimport Const from \"./Main/Const.js\";\r\nimport RemoteCommand from \"./Main/RemoteCommand.js\";\r\nimport Base from \"./Main/LogootDoc/Base.js\";\r\nimport CharId from \"./Main/LogootDoc/CharId.js\";\r\nimport Char from \"./Main/LogootDoc/Char.js\";\r\nimport Document from \"./Main/LogootDoc/Document.js\";\r\nimport Algorithm from \"./Main/Algorithm.js\";\r\n\r\nwindow.Base = Base;\r\nwindow.RemoteCommand = RemoteCommand;\r\nwindow.CharId = CharId;\r\nwindow.Char = Char;\r\nwindow.Document = Document;\r\nwindow.Algorithm = Algorithm;\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","window.MIN_BASE_EL = 0\r\n//const MAX_BASE_EL = Math.pow(2, 53) - 1\r\nwindow.MAX_BASE_EL = 1000\r\nwindow.MIN_OFFSET = MIN_BASE_EL + 1\r\nwindow.MAX_OFFSET = MAX_BASE_EL\r\nwindow.FIRST_ASSIGNED_OFFSET = Math.floor(MAX_OFFSET/2)\r\n\r\n// Char ID is represented by array of numbers, each of them in range [MIN_BASE_EL;MAX_BASE_EL]\r\n// Last element of char ID is called offset, others are called base\r\n// MIN_BASE_EL cannot be used as offset\r\n// When new base is generated, first char assigned to this base get offset FIRST_ASSIGNED_OFFSET, this value decide how much chars we can append and prepend to first char\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Main/Const.js\n **/","export default class RemoteCommand{\r\n    constructor(){}\r\n\r\n    makeAddCommand(str, id, sessionId){\r\n        this.type = \"add\"\r\n        this.str = str\r\n        this.id = id\r\n        this.sessionId = sessionId\r\n    }\r\n\r\n    makeDelCommand(ids, sessionId){\r\n        this.type = \"del\"\r\n        this.ids = ids\r\n        this.sessionId = sessionId\r\n    }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/Main/RemoteCommand.js\n **/","export default class Base {\r\n    constructor(main, sessionId, clock) {\r\n        this.main = main\r\n        this.sessionId = sessionId\r\n        this.clock = clock\r\n        this.minUsedOffset = MAX_OFFSET + 1\r\n        this.maxUsedOffset = MIN_OFFSET - 1\r\n    }\r\n\r\n    get fullBase() {\r\n        return this.main.concat([this.sessionId], [this.clock])\r\n    }\r\n\r\n    get copy(){\r\n        return new Base(this.main.slice(), this.sessionId, this.clock) \r\n    }\r\n\r\n    isEqual(otherBase) {\r\n        if (this.sessionId !== otherBase.sessionId || this.clock !== otherBase.clock || this.main.length !== otherBase.main.length)\r\n            return false\r\n        for (let i = 0; i < this.main.length; ++i)\r\n            if (this.main[i] != otherBase.main[i])\r\n                return false\r\n\r\n        return true\r\n    }\r\n\r\n    isPrefix(charId){\r\n        let thisId = this.fullBase\r\n        let otherId = charId.fullId\r\n        if(thisId.length > otherId.length)\r\n            return false\r\n        for(let i=0; i<thisId.length; ++i)\r\n            if(thisId[i] != otherId[i])\r\n                return false\r\n        return true;\r\n    }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/Main/LogootDoc/Base.js\n **/","export default class CharId {\r\n    constructor(base, offset) {\r\n        this.base = base\r\n        this.offset = offset\r\n        if (this.offset > base.maxUsedOffset)\r\n            base.maxUsedOffset = this.offset\r\n        if (this.offset < base.minUsedOffset)\r\n            base.minUsedOffset = offset\r\n    }\r\n\r\n    get fullId() {\r\n        return this.base.fullBase.concat(this.offset)\r\n    }\r\n\r\n    get copy(){\r\n        return new CharId(this.base.copy, this.offset)\r\n    }\r\n\r\n    isEqual(otherChar) {\r\n        return this.base.isEqual(otherChar.base)\r\n            && this.offset === otherChar.offset\r\n    }\r\n\r\n    isBigger(otherCharId) {\r\n        let thisId = this.fullId, otherId = otherCharId.fullId\r\n        for (let i = 0; i < Math.min(thisId.length, otherId.length); ++i)\r\n            if (thisId[i] !== otherId[i])\r\n                return thisId[i] > otherId[i]\r\n        return thisId.length > otherId.length\r\n    }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/Main/LogootDoc/CharId.js\n **/","export default class Char {\r\n    constructor(value, id) {\r\n        this.value = value\r\n        this.id = id\r\n    }\r\n\r\n    isEqual(otherChar) {\r\n        return this.value === otherChar.value\r\n            && this.id.isEqual(otherChar.id)\r\n    }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/Main/LogootDoc/Char.js\n **/","import Base from './Base';\r\nimport CharId from './CharId';\r\nimport Char from './Char';\r\n\r\n// At the beginning document contains two chars: DOC_BEG and DOC_END, they're not actual\r\n// text chars and are only used to represent start and end of the document\r\n\r\n        var DOC_BEG = new Char(null, new CharId(new Base([MIN_BASE_EL-1], MIN_BASE_EL-1, MIN_BASE_EL-1), MIN_OFFSET-1))\r\n        var DOC_END = new Char(null, new CharId(new Base([MAX_BASE_EL+1], MAX_BASE_EL+1, MAX_BASE_EL+1), MAX_OFFSET+1))\r\n\r\nexport default class Document {\r\n    constructor() {\r\n        this.chars = [DOC_BEG, DOC_END]\r\n        this.bases = []\r\n    }\r\n\r\n    insertStrAppended(str, pos) {\r\n        logFunc(\"insertStrAppended\", [str, pos])\r\n        let charWeAppendTo = this.chars[pos - 1];\r\n        let base = charWeAppendTo.id.base\r\n        let firstOffset = charWeAppendTo.id.offset + 1\r\n        this.insertStringWithExistingBase(str, pos, base, firstOffset)\r\n    }\r\n\r\n    insertStrPrepended(str, pos) {\r\n        logFunc(\"insertStrPrepended\", [str, pos])\r\n        let charWePrependTo = this.chars[pos];\r\n        let base = charWePrependTo.id.base\r\n        let firstOffset = charWePrependTo.id.offset - str.length\r\n        this.insertStringWithExistingBase(str, pos, base, firstOffset)\r\n    }\r\n\r\n    insertStringWithExistingBase(str, pos, base, firstOffset = FIRST_ASSIGNED_OFFSET) { //optimize\r\n        logFunc(\"insertStrWithExistingBase\", [str, pos, base, firstOffset])\r\n        this.insertStrAtPos(str, pos, base, firstOffset)\r\n        this.sortDocumentPart(1, this.chars.length - 1)\r\n    }\r\n\r\n    insertStringWithNewBase(str, pos, base){\r\n        logFunc(\"insertStrWithNewBase\", [str, pos, base])\r\n        this.addBase(base)\r\n        this.insertStringWithExistingBase(str, pos, base)\r\n    }\r\n\r\n    insertStrAtPos(str, pos, base, firstCharOffset) {\r\n        logFunc(\"insertStrAtPos\", [str, pos, base, firstCharOffset])\r\n        let offset = firstCharOffset\r\n        for (let char of str) {\r\n            let newId = new CharId(base, offset)\r\n            let newChar = new Char(char, newId)\r\n            this.insertCharAtPos(newChar, pos)\r\n            ++pos\r\n            ++offset\r\n        }\r\n    }\r\n\r\n    addChars(chars){\r\n        logFunc(\"addChars\", [chars])\r\n        if(chars.length == 0)\r\n            return\r\n        let pos = this.getPosOfFirstCharWithBiggerId(chars[0].id)\r\n        for(let char of chars){\r\n            this.insertCharAtPos(char, pos)\r\n            ++pos\r\n        }\r\n        this.sortDocumentPart(1, this.chars.length - 1)\r\n    }\r\n\r\n    sortDocumentPart(sortBeg, sortEnd) {\r\n        for (var pos = sortBeg + 1; pos <= sortEnd; ++pos) {\r\n            var temp = this.chars[pos];\r\n            var prevPos = pos - 1;\r\n            for (; prevPos >= 1 && this.chars[prevPos].id.isBigger(temp.id); --prevPos)\r\n                this.chars[prevPos + 1] = this.chars[prevPos];\r\n            this.chars[prevPos + 1] = temp;\r\n        }\r\n    }\r\n\r\n    addBase(base){\r\n        logFunc(\"addBase\", [base])\r\n        this.bases.push(base)\r\n    }\r\n\r\n    delChars(fromPos, toPos) {\r\n        for (let pos = toPos; pos >= fromPos; --pos)\r\n            this.delChar(pos)\r\n    }\r\n\r\n    delChar(pos){\r\n        this.chars.splice(pos, 1)\r\n    }\r\n\r\n    getPosOfCharWithId(id){ \r\n        for(let pos=0; pos<this.chars.length; ++pos)\r\n            if(this.chars[pos].id.isEqual(id))\r\n                return pos\r\n        return null\r\n    }\r\n\r\n    getPosOfFirstCharWithBiggerId(charId) {\r\n        for (let pos = 1; pos < this.chars.length; ++pos)\r\n            if (this.chars[pos].id.isBigger(charId))\r\n                return pos\r\n        return null\r\n    }\r\n\r\n    getCharAtPos(pos) {\r\n        return this.chars[pos]\r\n    }\r\n\r\n    getIdOfCharAtPos(pos) {\r\n        return this.chars[pos].id\r\n    }\r\n\r\n    getCharIds(fromPos, toPos) {\r\n        let ids = []\r\n        for (let i = fromPos; i <= toPos; ++i)\r\n            ids.push(this.chars[i].id)\r\n        return ids;\r\n    }\r\n    getSameBase(base){\r\n        for(let b of this.bases)\r\n            if(base.isEqual(b))\r\n                return b\r\n        return null\r\n    }\r\n\r\n    insertCharAtPos(char, pos) {\r\n        logFunc(\"insertCharAtPos\", [char, pos])\r\n        this.chars.splice(pos, 0, char)\r\n    }\r\n\r\n    isEmpty() {\r\n        return this.chars.length == 2\r\n    }\r\n\r\n    get text() {\r\n        let text = \"\"\r\n        for (let i = 0; i < this.chars.length; ++i)\r\n            text += this.chars[i].value\r\n        return text\r\n    }\r\n\r\n    get textTest() {\r\n        let text = \"\"\r\n        for (let i = 0; i < this.chars.length; ++i) {\r\n            text += (i == 0 || i == this.chars.length - 1 ? \"\" : this.chars[i].value)\r\n            if (i + 1 < this.chars.length && !(this.chars[i].id.base.isEqual(this.chars[i + 1].id.base)))\r\n                text += \"|\"\r\n        }\r\n        return text\r\n    }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/Main/LogootDoc/Document.js\n **/","import Base from './LogootDoc/Base';\r\nimport CharId from './LogootDoc/CharId';\r\nimport Char from './LogootDoc/Char';\r\nimport Document from './LogootDoc/Document';\r\nimport RemoteCommand from './RemoteCommand';\r\n\r\nexport default class Algorithm {\r\n    constructor(doc, sessionId) {\r\n        this.doc = doc\r\n        this.sessionId = sessionId\r\n        this.clock = 0\r\n        this.idsOfCharsToDeleteLater = []\r\n    }\r\n\r\n    insert(str, pos){\r\n        this.insertIntoDocument(str, pos)\r\n        return this.createRemoteAddCommand(str, pos)\r\n    }\r\n\r\n    add(str, strId){\r\n\r\n        let chars = this.createCharsFromStr(str, strId)\r\n        logFunc(\"add\", [str, strId], [this.idsOfCharsToDeleteLater, chars])\r\n\r\n        for(let i = chars.length-1; i>=0; --i){\r\n            for(let j=this.idsOfCharsToDeleteLater.length-1; j>=0; --j){\r\n                if(chars[i].id.isEqual(this.idsOfCharsToDeleteLater[j])){\r\n                    chars.splice(i,1)\r\n                    this.idsOfCharsToDeleteLater.splice(j,1)\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        this.doc.addChars(chars)\r\n    }\r\n\r\n    remove(fromPos, toPos){\r\n        logFunc(\"remove\", [fromPos, toPos])\r\n        let delIds = this.doc.getCharIds(fromPos, toPos)\r\n        let delIdsCopy = delIds.map(function(id){return id.copy})\r\n        this.doc.delChars(fromPos, toPos)\r\n        return this.createRemoteDelCommand(delIds)\r\n    }\r\n\r\n    del(ids){ //optimize eg. if consecutive ids then obtain range (pos, pos+length-1)\r\n        logFunc(\"del\", [ids])\r\n        for(let id of ids){\r\n            let pos = this.doc.getPosOfCharWithId(id)\r\n            if(pos != null)\r\n                this.doc.delChar(pos)\r\n            else\r\n                this.idsOfCharsToDeleteLater.push(id)\r\n        }\r\n    }\r\n\r\n    createRemoteDelCommand(delIds){\r\n        let remoteDelCommand = new RemoteCommand();\r\n        remoteDelCommand.makeDelCommand(delIds, this.session);\r\n        return remoteDelCommand\r\n    }\r\n\r\n    createCharsFromStr(str, strId){\r\n        let base = this.doc.getSameBase(strId.base)\r\n        if(base == null)\r\n            base = strId.base\r\n        \r\n        let chars = []\r\n        let offset = strId.offset\r\n        for(let char of str){\r\n            chars.push(new Char(char, new CharId(base, offset)))\r\n            ++offset\r\n        }\r\n        return chars;\r\n    }\r\n\r\n    insertIntoDocument(str, pos){\r\n        if(this.canInsertAppended(str, pos))\r\n            this.doc.insertStrAppended(str, pos)\r\n        else if(this.canInsertPrepended(str, pos))\r\n            this.doc.insertStrPrepended(str, pos)\r\n        else\r\n            this.doc.insertStringWithNewBase(str, pos, this.generateBaseAtPos(pos))\r\n    }\r\n\r\n    canInsertAppended(str, pos){\r\n        let charWeAppendTo = this.doc.getCharAtPos(pos - 1)\r\n        return this.isSameSession(charWeAppendTo)\r\n            && this.isHighestOffsetInBase(charWeAppendTo)\r\n            && this.isSpaceInBaseAfter(charWeAppendTo, str.length)\r\n            && this.isNotGoingToOverlapAfterApp(str, pos)\r\n    }\r\n\r\n    isNotGoingToOverlapAfterApp(str, pos){\r\n        let prevCharId = this.doc.getIdOfCharAtPos(pos-1)\r\n        let nextCharId = this.doc.getIdOfCharAtPos(pos)\r\n        let lastIdOfAppStr = prevCharId.copy\r\n        lastIdOfAppStr.offset += str.length\r\n        return !lastIdOfAppStr.isBigger(nextCharId)\r\n    }\r\n\r\n    canInsertPrepended(str, pos){\r\n        let charWePrependTo = this.doc.getCharAtPos(pos)\r\n        return this.isSameSession(charWePrependTo)\r\n            && this.isLowestOffsetInBase(charWePrependTo)\r\n            && this.isSpaceInBaseBefore(charWePrependTo, str.length)\r\n            && this.isNotGoingToOverlapAfterPrep(str, pos)\r\n    }\r\n    \r\n    isNotGoingToOverlapAfterPrep(str, pos){\r\n        let prevCharId = this.doc.getIdOfCharAtPos(pos-1)\r\n        let nextCharId = this.doc.getIdOfCharAtPos(pos)\r\n        let firstIdOfPrepStr = nextCharId.copy\r\n        firstIdOfPrepStr.offset -= str.length\r\n        return !prevCharId.isBigger(firstIdOfPrepStr)\r\n    }\r\n\r\n    isSameSession(char){\r\n        return char.id.base.sessionId == this.sessionId\r\n    }\r\n\r\n    isHighestOffsetInBase(char){\r\n        return char.id.offset == char.id.base.maxUsedOffset\r\n    }\r\n\r\n    isLowestOffsetInBase(char){\r\n        return char.id.offset == char.id.base.minUsedOffset\r\n    }\r\n\r\n    isSpaceInBaseAfter(char, spaceLength){\r\n        return char.id.offset + spaceLength < MAX_BASE_EL\r\n    }\r\n\r\n    isSpaceInBaseBefore(char, spaceLength){\r\n        return char.id.offset - spaceLength > MIN_BASE_EL\r\n    }\r\n\r\n    createRemoteAddCommand(str, pos){\r\n        let addId = this.doc.getCharAtPos(pos).id.copy\r\n        let remoteAddCommand = new RemoteCommand();\r\n        remoteAddCommand.makeAddCommand(str, addId, this.sessionId)\r\n        return remoteAddCommand\r\n    }\r\n\r\n    generateBaseAtPos(pos){\r\n        let idLow = this.doc.getIdOfCharAtPos(pos - 1).fullId\r\n        let idHigh = this.doc.getIdOfCharAtPos(pos).fullId\r\n        let low = idLow[0]\r\n        let high = idHigh[0]\r\n        let base = new Base([], this.sessionId, ++this.clock)\r\n\r\n        for (let i = 1; high - low < 2; ++i) {\r\n            base.main.push(low)\r\n            low = (i < idLow.length ? idLow[i] : MIN_BASE_EL)\r\n            high = (i < idHigh.length ? idHigh[i] : MAX_BASE_EL)\r\n        }\r\n        base.main.push(this.getRandomElementBetween(low + 1, high - 1))\r\n        return base\r\n    }\r\n\r\n    numberOfInsertableCharaters(idInsert, idNext, strLength){\r\n        if(idInsert.base.isPrefix(idNext))\r\n            return 0;\r\n        else\r\n            return strLength\r\n    }\r\n\r\n\r\n    getRandomElementBetween(low, high){\r\n        return Math.floor(Math.random() * (high - low + 1)) + low;\r\n    }\r\n\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/Main/Algorithm.js\n **/"],"sourceRoot":""}