{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap b7413a63f42248bf9080","webpack:///./src/index.js","webpack:///./src/Main/Const.js","webpack:///./src/Main/RemoteCommand.js","webpack:///./src/Main/LogootDoc/Base.js","webpack:///./src/Main/LogootDoc/CharId.js","webpack:///./src/Main/LogootDoc/Char.js","webpack:///./src/Main/LogootDoc/Document.js","webpack:///./src/Main/Algorithm.js"],"names":["window","Base","RemoteCommand","CharId","Char","Document","Algorithm","MIN_BASE_EL","MAX_BASE_EL","MIN_OFFSET","MAX_OFFSET","FIRST_ASSIGNED_OFFSET","Math","floor","str","id","sessionId","type","ids","main","clock","minUsedOffset","maxUsedOffset","otherBase","length","i","charId","thisId","fullBase","otherId","fullId","concat","slice","base","offset","otherChar","isEqual","otherCharId","min","copy","value","DOC_BEG","DOC_END","chars","bases","pos","charWeAppendTo","firstOffset","insertStringWithExistingBase","charWePrependTo","insertStrAtPos","sortDocumentPart","addBase","firstCharOffset","char","newId","newChar","insertCharAtPos","changes","pos0","getPosOfFirstCharWithBiggerId","prevUsedPos","changeStr","getPosOfFirstCharWithBiggerIdStartingFrom","change","string","position","push","sortBeg","sortEnd","temp","prevPos","isBigger","fromPos","toPos","delChar","splice","startPos","b","logHeader","console","log","getCharStateStr","toString","text","doc","idsOfCharsToDeleteLater","insertIntoDocument","createRemoteAddCommand","delIds","getCharIds","delIdsCopy","map","delChars","createRemoteDelCommand","strId","createCharsFromStr","j","addCharsAndGetChanges","delPos","getPosOfCharWithIdStartingFrom","delPosRange","start","end","extendRange","from","to","range","remoteDelCommand","makeDelCommand","session","getSameBase","canInsertAppended","insertStrAppended","canInsertPrepended","insertStrPrepended","insertStringWithNewBase","generateBaseAtPos","getCharAtPos","isSameSession","isHighestOffsetInBase","isSpaceInBaseAfter","isNotGoingToOverlapAfterApp","prevCharId","getIdOfCharAtPos","nextCharId","lastIdOfAppStr","isLowestOffsetInBase","isSpaceInBaseBefore","isNotGoingToOverlapAfterPrep","firstIdOfPrepStr","spaceLength","addId","remoteAddCommand","makeAddCommand","idLow","idHigh","low","high","getRandomElementBetween","random"],"mappings":"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","file":"logootsplit.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"logootsplit\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"logootsplit\"] = factory();\n\telse\n\t\troot[\"logootsplit\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap b7413a63f42248bf9080\n **/","import Const from \"./Main/Const.js\";\r\n\r\nimport RemoteCommand from \"./Main/RemoteCommand.js\";\r\nimport Base from \"./Main/LogootDoc/Base.js\";\r\nimport CharId from \"./Main/LogootDoc/CharId.js\";\r\nimport Char from \"./Main/LogootDoc/Char.js\";\r\nimport Document from \"./Main/LogootDoc/Document.js\";\r\nimport Algorithm from \"./Main/Algorithm.js\";\r\n\r\nwindow.Base = Base;\r\nwindow.RemoteCommand = RemoteCommand;\r\nwindow.CharId = CharId;\r\nwindow.Char = Char;\r\nwindow.Document = Document;\r\nwindow.Algorithm = Algorithm;\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","window.MIN_BASE_EL = 0\r\n//const MAX_BASE_EL = Math.pow(2, 53) - 1\r\nwindow.MAX_BASE_EL = 10000000\r\nwindow.MIN_OFFSET = MIN_BASE_EL + 1\r\nwindow.MAX_OFFSET = MAX_BASE_EL\r\nwindow.FIRST_ASSIGNED_OFFSET = Math.floor(MAX_OFFSET/2)\r\n\r\n// Char ID is represented by array of numbers, each of them in range [MIN_BASE_EL;MAX_BASE_EL]\r\n// Last element of char ID is called offset, others are called base\r\n// MIN_BASE_EL cannot be used as offset\r\n// When new base is generated, first char assigned to this base get offset FIRST_ASSIGNED_OFFSET, this value decide how much chars we can append and prepend to first char\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Main/Const.js\n **/","export default class RemoteCommand{\r\n    constructor(){}\r\n\r\n    makeAddCommand(str, id, sessionId){\r\n        this.type = \"add\"\r\n        this.str = str\r\n        this.id = id\r\n        this.sessionId = sessionId\r\n    }\r\n\r\n    makeDelCommand(ids, sessionId){\r\n        this.type = \"del\"\r\n        this.ids = ids\r\n        this.sessionId = sessionId\r\n    }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/Main/RemoteCommand.js\n **/","export default class Base {\r\n    constructor(main, sessionId, clock) {\r\n        this.main = main\r\n        this.sessionId = sessionId\r\n        this.clock = clock\r\n        this.minUsedOffset = MAX_OFFSET + 1\r\n        this.maxUsedOffset = MIN_OFFSET - 1\r\n    }\r\n\r\n    get fullBase() {\r\n        return this.main.concat([this.sessionId], [this.clock])\r\n    }\r\n\r\n    get copy(){\r\n        return new Base(this.main.slice(), this.sessionId, this.clock) \r\n    }\r\n\r\n    isEqual(otherBase) {\r\n        if (this.sessionId !== otherBase.sessionId || this.clock !== otherBase.clock || this.main.length !== otherBase.main.length)\r\n            return false\r\n        for (let i = 0; i < this.main.length; ++i)\r\n            if (this.main[i] != otherBase.main[i])\r\n                return false\r\n\r\n        return true\r\n    }\r\n\r\n    isPrefix(charId){\r\n        let thisId = this.fullBase\r\n        let otherId = charId.fullId\r\n        if(thisId.length > otherId.length)\r\n            return false\r\n        for(let i=0; i<thisId.length; ++i)\r\n            if(thisId[i] != otherId[i])\r\n                return false\r\n        return true;\r\n    }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/Main/LogootDoc/Base.js\n **/","export default class CharId {\r\n    constructor(base, offset) {\r\n        this.base = base\r\n        this.offset = offset\r\n        if (this.offset > base.maxUsedOffset)\r\n            base.maxUsedOffset = this.offset\r\n        if (this.offset < base.minUsedOffset)\r\n            base.minUsedOffset = offset\r\n    }\r\n\r\n    get fullId() {\r\n        return this.base.fullBase.concat(this.offset)\r\n    }\r\n\r\n    get copy(){\r\n        return new CharId(this.base.copy, this.offset)\r\n    }\r\n\r\n    isEqual(otherChar) {\r\n        return this.base.isEqual(otherChar.base)\r\n            && this.offset === otherChar.offset\r\n    }\r\n\r\n    isBigger(otherCharId) {\r\n        let thisId = this.fullId, otherId = otherCharId.fullId\r\n        for (let i = 0; i < Math.min(thisId.length, otherId.length); ++i)\r\n            if (thisId[i] !== otherId[i])\r\n                return thisId[i] > otherId[i]\r\n        return thisId.length > otherId.length\r\n    }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/Main/LogootDoc/CharId.js\n **/","export default class Char {\r\n    constructor(value, id) {\r\n        this.value = value\r\n        this.id = id\r\n    }\r\n\r\n    isEqual(otherChar) {\r\n        return this.value === otherChar.value\r\n            && this.id.isEqual(otherChar.id)\r\n    }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/Main/LogootDoc/Char.js\n **/","import Base from './Base';\r\nimport CharId from './CharId';\r\nimport Char from './Char';\r\n\r\n// At the beginning document contains two chars: DOC_BEG and DOC_END, they're not actual\r\n// text chars and are only used to represent start and end of the document\r\n\r\nvar DOC_BEG = new Char(null, new CharId(new Base([MIN_BASE_EL - 1], MIN_BASE_EL - 1, MIN_BASE_EL - 1), MIN_OFFSET - 1))\r\nvar DOC_END = new Char(null, new CharId(new Base([MAX_BASE_EL + 1], MAX_BASE_EL + 1, MAX_BASE_EL + 1), MAX_OFFSET + 1))\r\n\r\nexport default class Document {\r\n    constructor() {\r\n        this.chars = [DOC_BEG, DOC_END]\r\n        this.bases = []\r\n    }\r\n\r\n    insertStrAppended(str, pos) {\r\n        let charWeAppendTo = this.chars[pos - 1];\r\n        let base = charWeAppendTo.id.base\r\n        let firstOffset = charWeAppendTo.id.offset + 1\r\n        this.insertStringWithExistingBase(str, pos, base, firstOffset)\r\n    }\r\n\r\n    insertStrPrepended(str, pos) {\r\n        let charWePrependTo = this.chars[pos];\r\n        let base = charWePrependTo.id.base\r\n        let firstOffset = charWePrependTo.id.offset - str.length\r\n        this.insertStringWithExistingBase(str, pos, base, firstOffset)\r\n    }\r\n\r\n    insertStringWithExistingBase(str, pos, base, firstOffset = FIRST_ASSIGNED_OFFSET) {\r\n        this.insertStrAtPos(str, pos, base, firstOffset)\r\n        this.sortDocumentPart(pos, this.chars.length - 1)\r\n    }\r\n\r\n    insertStringWithNewBase(str, pos, base) {\r\n        this.addBase(base)\r\n        this.insertStringWithExistingBase(str, pos, base)\r\n    }\r\n\r\n    insertStrAtPos(str, pos, base, firstCharOffset) {\r\n        let offset = firstCharOffset\r\n        for (let char of str) {\r\n            let newId = new CharId(base, offset)\r\n            let newChar = new Char(char, newId)\r\n            this.insertCharAtPos(newChar, pos)\r\n            ++pos\r\n            ++offset\r\n        }\r\n    }\r\n\r\n    addCharsAndGetChanges(chars) {\r\n        let changes = []\r\n        if (chars.length == 0)\r\n            return changes\r\n        let pos0 = this.getPosOfFirstCharWithBiggerId(chars[0].id)\r\n        let prevUsedPos = null\r\n        let changeStr = \"\"\r\n\r\n        for (let i = chars.length - 1; i >= 0; --i) {\r\n            let pos = this.getPosOfFirstCharWithBiggerIdStartingFrom(chars[i].id, pos0)\r\n            if (prevUsedPos === pos || changeStr === \"\") {\r\n                changeStr = chars[i].value + changeStr\r\n            } else {\r\n                let change = { type: \"add\", string: changeStr, position: prevUsedPos - 1 } //ace position, not loogot\r\n                changes.push(change)\r\n                changeStr = chars[i].value\r\n            }\r\n            if (i == 0 && changeStr !== \"\")\r\n                changes.push({ type: \"add\", string: changeStr, position: pos - 1 })\r\n            this.insertCharAtPos(chars[i], pos)\r\n            prevUsedPos = pos\r\n        }\r\n        \r\n        return changes\r\n    }\r\n\r\n\r\n    sortDocumentPart(sortBeg, sortEnd) {\r\n        for (var pos = sortBeg + 1; pos <= sortEnd; ++pos) {\r\n            var temp = this.chars[pos];\r\n            var prevPos = pos - 1;\r\n            for (; prevPos >= 1 && this.chars[prevPos].id.isBigger(temp.id); --prevPos)\r\n                this.chars[prevPos + 1] = this.chars[prevPos];\r\n            this.chars[prevPos + 1] = temp;\r\n        }\r\n    }\r\n\r\n    addBase(base) {\r\n        this.bases.push(base)\r\n    }\r\n\r\n    delChars(fromPos, toPos) {\r\n        for (let pos = toPos; pos >= fromPos; --pos)\r\n            this.delChar(pos)\r\n    }\r\n\r\n    delChar(pos) {\r\n        this.chars.splice(pos, 1)\r\n    }\r\n\r\n    getPosOfCharWithId(id) {\r\n        for (let pos = 0; pos < this.chars.length; ++pos)\r\n            if (this.chars[pos].id.isEqual(id))\r\n                return pos\r\n        return null\r\n    }\r\n\r\n    getPosOfCharWithIdStartingFrom(id, startPos){\r\n        for (let pos = startPos; pos < this.chars.length; ++pos)\r\n            if (this.chars[pos].id.isEqual(id))\r\n                return pos\r\n        return null\r\n    }\r\n\r\n    getPosOfFirstCharWithBiggerId(charId) {\r\n        for (let pos = 1; pos < this.chars.length; ++pos)\r\n            if (this.chars[pos].id.isBigger(charId))\r\n                return pos\r\n        return null\r\n    }\r\n\r\n    getPosOfFirstCharWithBiggerIdStartingFrom(charId, startPos) {\r\n        for (let pos = startPos; pos < this.chars.length; ++pos)\r\n            if (this.chars[pos].id.isBigger(charId))\r\n                return pos\r\n        return null\r\n    }\r\n\r\n    getCharAtPos(pos) {\r\n        return this.chars[pos]\r\n    }\r\n\r\n    getIdOfCharAtPos(pos) {\r\n        return this.chars[pos].id\r\n    }\r\n\r\n    getCharIds(fromPos, toPos) {\r\n        let ids = []\r\n        for (let i = fromPos; i <= toPos; ++i)\r\n            ids.push(this.chars[i].id)\r\n        return ids;\r\n    }\r\n    getSameBase(base) {\r\n        for (let b of this.bases)\r\n            if (base.isEqual(b))\r\n                return b\r\n        return null\r\n    }\r\n\r\n    insertCharAtPos(char, pos) {\r\n        this.chars.splice(pos, 0, char)\r\n    }\r\n\r\n    isEmpty() {\r\n        return this.chars.length == 2\r\n    }\r\n\r\n    get text() {\r\n        let text = \"\"\r\n        for (let i = 0; i < this.chars.length; ++i)\r\n            text += this.chars[i].value\r\n        return text\r\n    }\r\n\r\n    get textTest() {\r\n        let text = \"\"\r\n        for (let i = 0; i < this.chars.length; ++i) {\r\n            text += (i == 0 || i == this.chars.length - 1 ? \"\" : this.chars[i].value)\r\n            if (i + 1 < this.chars.length && !(this.chars[i].id.base.isEqual(this.chars[i + 1].id.base)))\r\n                text += \"|\"\r\n        }\r\n        return text\r\n    }\r\n\r\n    showDetailedSessionState(logHeader){\r\n        console.log(logHeader)\r\n        for(let i=0; i < this.chars.length; ++i)\r\n            console.log(\"----- \" + this.getCharStateStr(this.chars[i]))\r\n    }\r\n\r\n    getCharStateStr(char){\r\n        return char.value + \":  \" + char.id.fullId.toString()\r\n    }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/Main/LogootDoc/Document.js\n **/","import Base from './LogootDoc/Base';\r\nimport CharId from './LogootDoc/CharId';\r\nimport Char from './LogootDoc/Char';\r\nimport Document from './LogootDoc/Document';\r\nimport RemoteCommand from './RemoteCommand';\r\n\r\nexport default class Algorithm {\r\n    constructor(doc, sessionId) {\r\n        this.doc = doc\r\n        this.sessionId = sessionId\r\n        this.clock = 0\r\n        this.idsOfCharsToDeleteLater = []\r\n    }\r\n\r\n    insert(str, pos){\r\n        this.insertIntoDocument(str, pos)\r\n        return this.createRemoteAddCommand(str, pos)\r\n    }\r\n\r\n    remove(fromPos, toPos){\r\n        let delIds = this.doc.getCharIds(fromPos, toPos)\r\n        let delIdsCopy = delIds.map(function(id){return id.copy})\r\n        this.doc.delChars(fromPos, toPos)\r\n        return this.createRemoteDelCommand(delIdsCopy)\r\n    }\r\n\r\n    add(str, strId){\r\n        let chars = this.createCharsFromStr(str, strId)\r\n        for(let i = chars.length-1; i>=0; --i){\r\n            for(let j=this.idsOfCharsToDeleteLater.length-1; j>=0; --j){\r\n                if(chars[i].id.isEqual(this.idsOfCharsToDeleteLater[j])){\r\n                    chars.splice(i,1)\r\n                    this.idsOfCharsToDeleteLater.splice(j,1)\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        let changes = this.doc.addCharsAndGetChanges(chars)\r\n        return changes;\r\n    }\r\n\r\n    del(ids){\r\n        let pos0 = 1\r\n        let delPos = []\r\n        \r\n        for(let id of ids){\r\n            let pos = this.doc.getPosOfCharWithIdStartingFrom(id, pos0)\r\n            if(pos != null){\r\n                delPos.push(pos)\r\n                pos0 = pos\r\n            }\r\n            else\r\n                this.idsOfCharsToDeleteLater.push(id)\r\n        }\r\n\r\n        let changes = []\r\n        let prevUsedPos = null\r\n        let delPosRange = {start: null, end:null}\r\n        for(let i=delPos.length-1; i>=0; --i){\r\n            let pos = delPos[i]\r\n            if(prevUsedPos === pos + 1 || delPosRange.start == null)\r\n                delPosRange = this.extendRange(delPosRange, pos)\r\n            else{\r\n                let change = {type: \"del\", from: delPosRange.start - 1, to: delPosRange.end - 1}\r\n                changes.push(change)\r\n                delPosRange = {start: pos, end: pos}\r\n            }\r\n            if(i==0 && delPosRange.start != null){\r\n                let change = {type: \"del\", from: delPosRange.start-1, to: delPosRange.end-1}\r\n                changes.push(change)\r\n            }\r\n            prevUsedPos = pos;\r\n        }\r\n\r\n        for(let i = delPos.length - 1; i >= 0; --i)\r\n            this.doc.delChar(delPos[i])     \r\n        \r\n        return changes\r\n    }\r\n\r\n    extendRange(range, pos){\r\n        return range.start == null ? {start: pos, end: pos} : {start: pos, end: range.end} \r\n    }\r\n\r\n    createRemoteDelCommand(delIds){\r\n        let remoteDelCommand = new RemoteCommand();\r\n        remoteDelCommand.makeDelCommand(delIds, this.session);\r\n        return remoteDelCommand\r\n    }\r\n\r\n    createCharsFromStr(str, strId){\r\n        let base = this.doc.getSameBase(strId.base)\r\n        if(base == null)\r\n            base = strId.base\r\n        \r\n        let chars = []\r\n        let offset = strId.offset\r\n        for(let char of str){\r\n            chars.push(new Char(char, new CharId(base, offset)))\r\n            ++offset\r\n        }\r\n        return chars;\r\n    }\r\n\r\n    insertIntoDocument(str, pos){\r\n        if(this.canInsertAppended(str, pos))\r\n            this.doc.insertStrAppended(str, pos)\r\n        else if(this.canInsertPrepended(str, pos))\r\n            this.doc.insertStrPrepended(str, pos)\r\n        else\r\n            this.doc.insertStringWithNewBase(str, pos, this.generateBaseAtPos(pos))\r\n    }\r\n\r\n    canInsertAppended(str, pos){\r\n        let charWeAppendTo = this.doc.getCharAtPos(pos - 1)\r\n        return this.isSameSession(charWeAppendTo)\r\n            && this.isHighestOffsetInBase(charWeAppendTo)\r\n            && this.isSpaceInBaseAfter(charWeAppendTo, str.length)\r\n            && this.isNotGoingToOverlapAfterApp(str, pos)\r\n    }\r\n\r\n    isNotGoingToOverlapAfterApp(str, pos){\r\n        let prevCharId = this.doc.getIdOfCharAtPos(pos-1)\r\n        let nextCharId = this.doc.getIdOfCharAtPos(pos)\r\n        let lastIdOfAppStr = prevCharId.copy\r\n        lastIdOfAppStr.offset += str.length\r\n        return !lastIdOfAppStr.isBigger(nextCharId)\r\n    }\r\n\r\n    canInsertPrepended(str, pos){\r\n        let charWePrependTo = this.doc.getCharAtPos(pos)\r\n        return this.isSameSession(charWePrependTo)\r\n            && this.isLowestOffsetInBase(charWePrependTo)\r\n            && this.isSpaceInBaseBefore(charWePrependTo, str.length)\r\n            && this.isNotGoingToOverlapAfterPrep(str, pos)\r\n    }\r\n    \r\n    isNotGoingToOverlapAfterPrep(str, pos){\r\n        let prevCharId = this.doc.getIdOfCharAtPos(pos-1)\r\n        let nextCharId = this.doc.getIdOfCharAtPos(pos)\r\n        let firstIdOfPrepStr = nextCharId.copy\r\n        firstIdOfPrepStr.offset -= str.length\r\n        return !prevCharId.isBigger(firstIdOfPrepStr)\r\n    }\r\n\r\n    isSameSession(char){\r\n        return char.id.base.sessionId == this.sessionId\r\n    }\r\n\r\n    isHighestOffsetInBase(char){\r\n        return char.id.offset == char.id.base.maxUsedOffset\r\n    }\r\n\r\n    isLowestOffsetInBase(char){\r\n        return char.id.offset == char.id.base.minUsedOffset\r\n    }\r\n\r\n    isSpaceInBaseAfter(char, spaceLength){\r\n        return char.id.offset + spaceLength < MAX_BASE_EL\r\n    }\r\n\r\n    isSpaceInBaseBefore(char, spaceLength){\r\n        return char.id.offset - spaceLength > MIN_BASE_EL\r\n    }\r\n\r\n    createRemoteAddCommand(str, pos){\r\n        let addId = this.doc.getCharAtPos(pos).id.copy\r\n        let remoteAddCommand = new RemoteCommand();\r\n        remoteAddCommand.makeAddCommand(str, addId, this.sessionId)\r\n        return remoteAddCommand\r\n    }\r\n\r\n    generateBaseAtPos(pos){\r\n        let idLow = this.doc.getIdOfCharAtPos(pos - 1).fullId\r\n        let idHigh = this.doc.getIdOfCharAtPos(pos).fullId\r\n        let low = idLow[0]\r\n        let high = idHigh[0]\r\n        let base = new Base([], this.sessionId, ++this.clock)\r\n\r\n        for (let i = 1; high - low < 2; ++i) {\r\n            base.main.push(low)\r\n            low = (i < idLow.length ? idLow[i] : MIN_BASE_EL)\r\n            high = (i < idHigh.length ? idHigh[i] : MAX_BASE_EL)\r\n        }\r\n        base.main.push(this.getRandomElementBetween(low + 1, high - 1))\r\n        return base\r\n    }\r\n\r\n    getRandomElementBetween(low, high){\r\n        return Math.floor(Math.random() * (high - low + 1)) + low;\r\n    }\r\n\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/Main/Algorithm.js\n **/"],"sourceRoot":""}