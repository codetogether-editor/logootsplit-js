{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///logootsplit.min.js","webpack:///webpack/bootstrap 2b3fee4db4729dcdc6c4","webpack:///./src/index.js","webpack:///./src/Main/Const.js","webpack:///./src/Main/RemoteCommand.js","webpack:///./src/Main/LogootDoc/Base.js","webpack:///./src/Main/LogootDoc/CharId.js","webpack:///./src/Main/LogootDoc/Char.js","webpack:///./src/Main/LogootDoc/Document.js","webpack:///./src/Main/Algorithm.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_Const","_RemoteCommand","_RemoteCommand2","_Base","_Base2","_CharId","_CharId2","_Char","_Char2","_Document","_Document2","_Algorithm","_Algorithm2","window","Base","RemoteCommand","CharId","Char","Document","Algorithm","MIN_BASE_EL","MAX_BASE_EL","MIN_OFFSET","MAX_OFFSET","FIRST_ASSIGNED_OFFSET","Math","floor","_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","value","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","str","sessionId","type","ids","main","clock","minUsedOffset","maxUsedOffset","otherBase","charId","thisId","fullBase","otherId","fullId","get","concat","slice","base","offset","otherChar","isEqual","otherCharId","min","copy","DOC_BEG","DOC_END","chars","bases","pos","charWeAppendTo","firstOffset","insertStringWithExistingBase","charWePrependTo","arguments","undefined","insertStrAtPos","sortDocumentPart","addBase","firstCharOffset","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","char","newId","newChar","insertCharAtPos","err","changes","pos0","getPosOfFirstCharWithBiggerId","prevUsedPos","changeStr","getPosOfFirstCharWithBiggerIdStartingFrom","change","string","position","push","sortBeg","sortEnd","temp","prevPos","isBigger","fromPos","toPos","delChar","splice","startPos","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","b","logHeader","console","log","getCharStateStr","toString","text","doc","idsOfCharsToDeleteLater","insertIntoDocument","createRemoteAddCommand","delIds","getCharIds","delIdsCopy","map","delChars","createRemoteDelCommand","strId","createCharsFromStr","j","addCharsAndGetChanges","delPos","getPosOfCharWithIdStartingFrom","delPosRange","start","end","extendRange","from","to","range","remoteDelCommand","makeDelCommand","session","getSameBase","canInsertAppended","insertStrAppended","canInsertPrepended","insertStrPrepended","insertStringWithNewBase","generateBaseAtPos","getCharAtPos","isSameSession","isHighestOffsetInBase","isSpaceInBaseAfter","isNotGoingToOverlapAfterApp","prevCharId","getIdOfCharAtPos","nextCharId","lastIdOfAppStr","isLowestOffsetInBase","isSpaceInBaseBefore","isNotGoingToOverlapAfterPrep","firstIdOfPrepStr","spaceLength","addId","remoteAddCommand","makeAddCommand","idLow","idHigh","low","high","getRandomElementBetween","random"],"mappings":"CAAA,SAAAA,EAAAC,GACA,gBAAAC,UAAA,gBAAAC,QACAA,OAAAD,QAAAD,IACA,kBAAAG,gBAAAC,IACAD,OAAA,iBAAAH,GACA,gBAAAC,SACAA,QAAA,YAAAD,IAEAD,EAAA,YAAAC,KACCK,KAAA,WACD,MCAgB,UAAUC,GCN1B,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAP,OAGA,IAAAC,GAAAO,EAAAD,IACAP,WACAS,GAAAF,EACAG,QAAA,EAUA,OANAL,GAAAE,GAAAI,KAAAV,EAAAD,QAAAC,IAAAD,QAAAM,GAGAL,EAAAS,QAAA,EAGAT,EAAAD,QAvBA,GAAAQ,KAqCA,OATAF,GAAAM,EAAAP,EAGAC,EAAAO,EAAAL,EAGAF,EAAAQ,EAAA,GAGAR,EAAA,KDgBM,SAASL,EAAQD,EAASM,GAE/B,YA8BA,SAASS,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAASF,GEtFxF,GAAAG,GAAAb,EAAA,GAEAc,GF0DeL,EAAuBI,GE1DtCb,EAAA,IF8DKe,EAAkBN,EAAuBK,GE7D9CE,EAAAhB,EAAA,GFiEKiB,EAASR,EAAuBO,GEhErCE,EAAAlB,EAAA,GFoEKmB,EAAWV,EAAuBS,GEnEvCE,EAAApB,EAAA,GFuEKqB,EAASZ,EAAuBW,GEtErCE,EAAAtB,EAAA,GF0EKuB,EAAad,EAAuBa,GEzEzCE,EAAAxB,EAAA,GF6EKyB,EAAchB,EAAuBe,EE3E1CE,QAAOC,KAAPV,aACAS,OAAOE,cAAPb,aACAW,OAAOG,OAAPV,aACAO,OAAOI,KAAPT,aACAK,OAAOK,SAAPR,aACAG,OAAOM,UAAPP,cFmFM,SAAS9B,EAAQD,GAEtB,YGnGDgC,QAAOO,YAAc,EAErBP,OAAOQ,YAAc,IACrBR,OAAOS,WAAaF,YAAc,EAClCP,OAAOU,WAAaF,YACpBR,OAAOW,sBAAwBC,KAAKC,MAAMH,WAAW,IH8G/C,SAASzC,EAAQD,GAEtB,YAQA,SAAS8C,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCANhHC,OAAOC,eAAenD,EAAS,cAC3BoD,OAAO,GAGX,IAAIC,GAAe,WAAc,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAIC,GAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CAAE,GAAIE,GAAaH,EAAMC,EAAIE,GAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,SAAWF,KAAYA,EAAWG,UAAW,GAAMZ,OAAOC,eAAeI,EAAQI,EAAWI,IAAKJ,IAAiB,MAAO,UAAUX,EAAagB,EAAYC,GAAiJ,MAA9HD,IAAYV,EAAiBN,EAAYkB,UAAWF,GAAiBC,GAAaX,EAAiBN,EAAaiB,GAAqBjB,MI3H5gBd,EJ+HA,WI9HjB,QAAAA,KAAaY,EAAA1C,KAAA8B,GJoJZ,MAjBAmB,GAAanB,IACT6B,IAAK,iBACLX,MAAO,SInIGe,EAAK1D,EAAI2D,GACpBhE,KAAKiE,KAAO,MACZjE,KAAK+D,IAAMA,EACX/D,KAAKK,GAAKA,EACVL,KAAKgE,UAAYA,KJsIhBL,IAAK,iBACLX,MAAO,SIpIGkB,EAAKF,GAChBhE,KAAKiE,KAAO,MACZjE,KAAKkE,IAAMA,EACXlE,KAAKgE,UAAYA,MJwIblC,IAGXlC,cIxJoBkC,EJyJpBjC,EAAOD,QAAUA,EAAQ,YAIpB,SAASC,EAAQD,GAEtB,YAQA,SAAS8C,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCANhHC,OAAOC,eAAenD,EAAS,cAC3BoD,OAAO,GAGX,IAAIC,GAAe,WAAc,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAIC,GAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CAAE,GAAIE,GAAaH,EAAMC,EAAIE,GAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,SAAWF,KAAYA,EAAWG,UAAW,GAAMZ,OAAOC,eAAeI,EAAQI,EAAWI,IAAKJ,IAAiB,MAAO,UAAUX,EAAagB,EAAYC,GAAiJ,MAA9HD,IAAYV,EAAiBN,EAAYkB,UAAWF,GAAiBC,GAAaX,EAAiBN,EAAaiB,GAAqBjB,MKrK5gBf,ELyKT,WKxKR,QAAAA,GAAYsC,EAAMH,EAAWI,GAAO1B,EAAA1C,KAAA6B,GAChC7B,KAAKmE,KAAOA,EACZnE,KAAKgE,UAAYA,EACjBhE,KAAKoE,MAAQA,EACbpE,KAAKqE,cAAgB/B,WAAa,EAClCtC,KAAKsE,cAAgBjC,WAAa,EL4MrC,MA9BAY,GAAapB,IACT8B,IAAK,UACLX,MAAO,SKrKJuB,GACJ,GAAIvE,KAAKgE,YAAcO,EAAUP,WAAahE,KAAKoE,QAAUG,EAAUH,OAASpE,KAAKmE,KAAKb,SAAWiB,EAAUJ,KAAKb,OAChH,OAAO,CACX,KAAK,GAAID,GAAI,EAAGA,EAAIrD,KAAKmE,KAAKb,SAAUD,EACpC,GAAIrD,KAAKmE,KAAKd,IAAMkB,EAAUJ,KAAKd,GAC/B,OAAO,CAEf,QAAO,KLqKNM,IAAK,WACLX,MAAO,SKnKHwB,GACL,GAAIC,GAASzE,KAAK0E,SACdC,EAAUH,EAAOI,MACrB,IAAGH,EAAOnB,OAASqB,EAAQrB,OACvB,OAAO,CACX,KAAI,GAAID,GAAE,EAAGA,EAAEoB,EAAOnB,SAAUD,EAC5B,GAAGoB,EAAOpB,IAAMsB,EAAQtB,GACpB,OAAO,CACf,QAAO,KLoKNM,IAAK,WACLkB,IAAK,WK9LN,MAAO7E,MAAKmE,KAAKW,QAAQ9E,KAAKgE,YAAahE,KAAKoE,WLkM/CT,IAAK,OACLkB,IAAK,WK/LN,MAAO,IAAIhD,GAAK7B,KAAKmE,KAAKY,QAAS/E,KAAKgE,UAAWhE,KAAKoE,WLoMpDvC,IAGXjC,cKrNoBiC,ELsNpBhC,EAAOD,QAAUA,EAAQ,YAIpB,SAASC,EAAQD,GAEtB,YAQA,SAAS8C,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCANhHC,OAAOC,eAAenD,EAAS,cAC3BoD,OAAO,GAGX,IAAIC,GAAe,WAAc,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAIC,GAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CAAE,GAAIE,GAAaH,EAAMC,EAAIE,GAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,SAAWF,KAAYA,EAAWG,UAAW,GAAMZ,OAAOC,eAAeI,EAAQI,EAAWI,IAAKJ,IAAiB,MAAO,UAAUX,EAAagB,EAAYC,GAAiJ,MAA9HD,IAAYV,EAAiBN,EAAYkB,UAAWF,GAAiBC,GAAaX,EAAiBN,EAAaiB,GAAqBjB,MMlO5gBb,ENsOP,WMrOV,QAAAA,GAAYiD,EAAMC,GAAQvC,EAAA1C,KAAA+B,GACtB/B,KAAKgF,KAAOA,EACZhF,KAAKiF,OAASA,EACVjF,KAAKiF,OAASD,EAAKV,gBACnBU,EAAKV,cAAgBtE,KAAKiF,QAC1BjF,KAAKiF,OAASD,EAAKX,gBACnBW,EAAKX,cAAgBY,GNmQ5B,MA1BAhC,GAAalB,IACT4B,IAAK,UACLX,MAAO,SMhOJkC,GACJ,MAAOlF,MAAKgF,KAAKG,QAAQD,EAAUF,OAC5BhF,KAAKiF,SAAWC,EAAUD,UNkOhCtB,IAAK,WACLX,MAAO,SMhOHoC,GAEL,IAAK,GADDX,GAASzE,KAAK4E,OAAQD,EAAUS,EAAYR,OACvCvB,EAAI,EAAGA,EAAIb,KAAK6C,IAAIZ,EAAOnB,OAAQqB,EAAQrB,UAAWD,EAC3D,GAAIoB,EAAOpB,KAAOsB,EAAQtB,GACtB,MAAOoB,GAAOpB,GAAKsB,EAAQtB,EACnC,OAAOoB,GAAOnB,OAASqB,EAAQrB,UNmO9BK,IAAK,SACLkB,IAAK,WMrPN,MAAO7E,MAAKgF,KAAKN,SAASI,OAAO9E,KAAKiF,WNyPrCtB,IAAK,OACLkB,IAAK,WMtPN,MAAO,IAAI9C,GAAO/B,KAAKgF,KAAKM,KAAMtF,KAAKiF,YN2PnClD,IAGXnC,cM7QoBmC,EN8QpBlC,EAAOD,QAAUA,EAAQ,YAIpB,SAASC,EAAQD,GAEtB,YAQA,SAAS8C,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCANhHC,OAAOC,eAAenD,EAAS,cAC3BoD,OAAO,GAGX,IAAIC,GAAe,WAAc,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAIC,GAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CAAE,GAAIE,GAAaH,EAAMC,EAAIE,GAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,SAAWF,KAAYA,EAAWG,UAAW,GAAMZ,OAAOC,eAAeI,EAAQI,EAAWI,IAAKJ,IAAiB,MAAO,UAAUX,EAAagB,EAAYC,GAAiJ,MAA9HD,IAAYV,EAAiBN,EAAYkB,UAAWF,GAAiBC,GAAaX,EAAiBN,EAAaiB,GAAqBjB,MO1R5gBZ,EP8RT,WO7RR,QAAAA,GAAYgB,EAAO3C,GAAIqC,EAAA1C,KAAAgC,GACnBhC,KAAKgD,MAAQA,EACbhD,KAAKK,GAAKA,EP0Sb,MAPA4C,GAAajB,IACT2B,IAAK,UACLX,MAAO,SOlSJkC,GACJ,MAAOlF,MAAKgD,QAAUkC,EAAUlC,OACzBhD,KAAKK,GAAG8E,QAAQD,EAAU7E,QPqS7B2B,IAGXpC,cOhToBoC,EPiTpBnC,EAAOD,QAAUA,EAAQ,YAIpB,SAASC,EAAQD,EAASM,GAE/B,YAoBA,SAASS,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAASF,GAEvF,QAAS8B,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCApBhHC,OAAOC,eAAenD,EAAS,cAC3BoD,OAAO,GAGX,IAAIC,GAAe,WAAc,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAIC,GAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CAAE,GAAIE,GAAaH,EAAMC,EAAIE,GAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,SAAWF,KAAYA,EAAWG,UAAW,GAAMZ,OAAOC,eAAeI,EAAQI,EAAWI,IAAKJ,IAAiB,MAAO,UAAUX,EAAagB,EAAYC,GAAiJ,MAA9HD,IAAYV,EAAiBN,EAAYkB,UAAWF,GAAiBC,GAAaX,EAAiBN,EAAaiB,GAAqBjB,MQ7TjiB1B,EAAAhB,EAAA,GRiUKiB,EAASR,EAAuBO,GQhUrCE,EAAAlB,EAAA,GRoUKmB,EAAWV,EAAuBS,GQnUvCE,EAAApB,EAAA,GRuUKqB,EAASZ,EAAuBW,GQlUjCiE,EAAU,GAAAhE,cAAS,KAAM,GAAAF,cAAW,GAAAF,eAAUgB,YAAc,GAAIA,YAAc,EAAGA,YAAc,GAAIE,WAAa,IAChHmD,EAAU,GAAAjE,cAAS,KAAM,GAAAF,cAAW,GAAAF,eAAUiB,YAAc,GAAIA,YAAc,EAAGA,YAAc,GAAIE,WAAa,IAE/FL,ER2UL,WQ1UZ,QAAAA,KAAcS,EAAA1C,KAAAiC,GACVjC,KAAKyF,OAASF,EAASC,GACvBxF,KAAK0F,SR2jBR,MA3OAzC,GAAahB,IACT0B,IAAK,oBACLX,MAAO,SQ/UMe,EAAK4B,GACnB,GAAIC,GAAiB5F,KAAKyF,MAAME,EAAM,GAClCX,EAAOY,EAAevF,GAAG2E,KACzBa,EAAcD,EAAevF,GAAG4E,OAAS,CAC7CjF,MAAK8F,6BAA6B/B,EAAK4B,EAAKX,EAAMa,MRkVjDlC,IAAK,qBACLX,MAAO,SQhVOe,EAAK4B,GACpB,GAAII,GAAkB/F,KAAKyF,MAAME,GAC7BX,EAAOe,EAAgB1F,GAAG2E,KAC1Ba,EAAcE,EAAgB1F,GAAG4E,OAASlB,EAAIT,MAClDtD,MAAK8F,6BAA6B/B,EAAK4B,EAAKX,EAAMa,MRmVjDlC,IAAK,+BACLX,MAAO,SQjViBe,EAAK4B,EAAKX,GAA2C,GAArCa,GAAqCG,UAAA1C,OAAA,GAAA2C,SAAAD,UAAA,GAAAA,UAAA,GAAvBzD,qBACvDvC,MAAKkG,eAAenC,EAAK4B,EAAKX,EAAMa,GACpC7F,KAAKmG,iBAAiBR,EAAK3F,KAAKyF,MAAMnC,OAAS,MRsV9CK,IAAK,0BACLX,MAAO,SQpVYe,EAAK4B,EAAKX,GAC9BhF,KAAKoG,QAAQpB,GACbhF,KAAK8F,6BAA6B/B,EAAK4B,EAAKX,MRuV3CrB,IAAK,iBACLX,MAAO,SQrVGe,EAAK4B,EAAKX,EAAMqB,GAC3B,GAAIpB,GAASoB,EAD+BC,GAAA,EAAAC,GAAA,EAAAC,EAAAP,MAAA,KAE5C,OAAAQ,GAAAC,EAAiB3C,EAAjB4C,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAsB,IAAbS,GAAaN,EAAAzD,MACdgE,EAAQ,GAAA3F,cAAW2D,EAAMC,GACzBgC,EAAU,GAAA1F,cAASwF,EAAMC,EAC7BhH,MAAKkH,gBAAgBD,EAAStB,KAC5BA,IACAV,GAPsC,MAAAkC,GAAAZ,GAAA,EAAAC,EAAAW,EAAA,aAAAb,GAAAI,2BAAA,WAAAH,EAAA,KAAAC,QRqX3C7C,IAAK,wBACLX,MAAO,SQ3WUyC,GAClB,GAAI2B,KACJ,IAAoB,GAAhB3B,EAAMnC,OACN,MAAO8D,EAKX,KAAK,GAJDC,GAAOrH,KAAKsH,8BAA8B7B,EAAM,GAAGpF,IACnDkH,EAAc,KACdC,EAAY,GAEPnE,EAAIoC,EAAMnC,OAAS,EAAGD,GAAK,IAAKA,EAAG,CACxC,GAAIsC,GAAM3F,KAAKyH,0CAA0ChC,EAAMpC,GAAGhD,GAAIgH,EACtE,IAAIE,IAAgB5B,GAAqB,KAAd6B,EACvBA,EAAY/B,EAAMpC,GAAGL,MAAQwE,MAC1B,CACH,GAAIE,IAAWzD,KAAM,MAAO0D,OAAQH,EAAWI,SAAUL,EAAc,EACvEH,GAAQS,KAAKH,GACbF,EAAY/B,EAAMpC,GAAGL,MAEhB,GAALK,GAAwB,KAAdmE,GACVJ,EAAQS,MAAO5D,KAAM,MAAO0D,OAAQH,EAAWI,SAAUjC,EAAM,IACnE3F,KAAKkH,gBAAgBzB,EAAMpC,GAAIsC,GAC/B4B,EAAc5B,EAGlB,MAAOyB,MR4WNzD,IAAK,mBACLX,MAAO,SQzWK8E,EAASC,GACtB,IAAK,GAAIpC,GAAMmC,EAAU,EAAGnC,GAAOoC,IAAWpC,EAAK,CAG/C,IAFA,GAAIqC,GAAOhI,KAAKyF,MAAME,GAClBsC,EAAUtC,EAAM,EACbsC,GAAW,GAAKjI,KAAKyF,MAAMwC,GAAS5H,GAAG6H,SAASF,EAAK3H,MAAO4H,EAC/DjI,KAAKyF,MAAMwC,EAAU,GAAKjI,KAAKyF,MAAMwC,EACzCjI,MAAKyF,MAAMwC,EAAU,GAAKD,MR6W7BrE,IAAK,UACLX,MAAO,SQ1WJgC,GACJhF,KAAK0F,MAAMmC,KAAK7C,MR6WfrB,IAAK,WACLX,MAAO,SQ3WHmF,EAASC,GACd,IAAK,GAAIzC,GAAMyC,EAAOzC,GAAOwC,IAAWxC,EACpC3F,KAAKqI,QAAQ1C,MR+WhBhC,IAAK,UACLX,MAAO,SQ7WJ2C,GACJ3F,KAAKyF,MAAM6C,OAAO3C,EAAK,MRgXtBhC,IAAK,qBACLX,MAAO,SQ9WO3C,GACf,IAAK,GAAIsF,GAAM,EAAGA,EAAM3F,KAAKyF,MAAMnC,SAAUqC,EACzC,GAAI3F,KAAKyF,MAAME,GAAKtF,GAAG8E,QAAQ9E,GAC3B,MAAOsF,EACf,OAAO,SRgXNhC,IAAK,iCACLX,MAAO,SQ9WmB3C,EAAIkI,GAC/B,IAAK,GAAI5C,GAAM4C,EAAU5C,EAAM3F,KAAKyF,MAAMnC,SAAUqC,EAChD,GAAI3F,KAAKyF,MAAME,GAAKtF,GAAG8E,QAAQ9E,GAC3B,MAAOsF,EACf,OAAO,SRgXNhC,IAAK,gCACLX,MAAO,SQ9WkBwB,GAC1B,IAAK,GAAImB,GAAM,EAAGA,EAAM3F,KAAKyF,MAAMnC,SAAUqC,EACzC,GAAI3F,KAAKyF,MAAME,GAAKtF,GAAG6H,SAAS1D,GAC5B,MAAOmB,EACf,OAAO,SRgXNhC,IAAK,4CACLX,MAAO,SQ9W8BwB,EAAQ+D,GAC9C,IAAK,GAAI5C,GAAM4C,EAAU5C,EAAM3F,KAAKyF,MAAMnC,SAAUqC,EAChD,GAAI3F,KAAKyF,MAAME,GAAKtF,GAAG6H,SAAS1D,GAC5B,MAAOmB,EACf,OAAO,SRgXNhC,IAAK,eACLX,MAAO,SQ9WC2C,GACT,MAAO3F,MAAKyF,MAAME,MRiXjBhC,IAAK,mBACLX,MAAO,SQ/WK2C,GACb,MAAO3F,MAAKyF,MAAME,GAAKtF,MRkXtBsD,IAAK,aACLX,MAAO,SQhXDmF,EAASC,GAEhB,IAAK,GADDlE,MACKb,EAAI8E,EAAS9E,GAAK+E,IAAS/E,EAChCa,EAAI2D,KAAK7H,KAAKyF,MAAMpC,GAAGhD,GAC3B,OAAO6D,MRmXNP,IAAK,cACLX,MAAO,SQlXAgC,GAAM,GAAAwD,IAAA,EAAAC,GAAA,EAAAC,EAAAzC,MAAA,KACd,OAAA0C,GAAAC,EAAc5I,KAAK0F,MAAnBiB,OAAAC,cAAA4B,GAAAG,EAAAC,EAAA/B,QAAAC,MAAA0B,GAAA,MAASK,GAATF,EAAA3F,KACI,IAAIgC,EAAKG,QAAQ0D,GACb,MAAOA,IAHD,MAAA1B,GAAAsB,GAAA,EAAAC,EAAAvB,EAAA,aAAAqB,GAAAI,2BAAA,WAAAH,EAAA,KAAAC,IAId,MAAO,SR2YN/E,IAAK,kBACLX,MAAO,SQzYI+D,EAAMpB,GAClB3F,KAAKyF,MAAM6C,OAAO3C,EAAK,EAAGoB,MR4YzBpD,IAAK,UACLX,MAAO,WQzYR,MAA4B,IAArBhD,KAAKyF,MAAMnC,UR6YjBK,IAAK,2BACLX,MAAO,SQ1Xa8F,GACrBC,QAAQC,IAAIF,EACZ,KAAI,GAAIzF,GAAE,EAAGA,EAAIrD,KAAKyF,MAAMnC,SAAUD,EAClC0F,QAAQC,IAAI,SAAWhJ,KAAKiJ,gBAAgBjJ,KAAKyF,MAAMpC,QR8X1DM,IAAK,kBACLX,MAAO,SQ5XI+D,GACZ,MAAOA,GAAK/D,MAAQ,MAAQ+D,EAAK1G,GAAGuE,OAAOsE,cR+X1CvF,IAAK,OACLkB,IAAK,WQtZN,IAAK,GADDsE,GAAO,GACF9F,EAAI,EAAGA,EAAIrD,KAAKyF,MAAMnC,SAAUD,EACrC8F,GAAQnJ,KAAKyF,MAAMpC,GAAGL,KAC1B,OAAOmG,MR2ZNxF,IAAK,WACLkB,IAAK,WQvZN,IAAK,GADDsE,GAAO,GACF9F,EAAI,EAAGA,EAAIrD,KAAKyF,MAAMnC,SAAUD,EACrC8F,GAAc,GAAL9F,GAAUA,GAAKrD,KAAKyF,MAAMnC,OAAS,EAAI,GAAKtD,KAAKyF,MAAMpC,GAAGL,MAC/DK,EAAI,EAAIrD,KAAKyF,MAAMnC,SAAYtD,KAAKyF,MAAMpC,GAAGhD,GAAG2E,KAAKG,QAAQnF,KAAKyF,MAAMpC,EAAI,GAAGhD,GAAG2E,QAClFmE,GAAQ,IAEhB,OAAOA,OR4ZHlH,IAGXrC,cQjkBoBqC,ERkkBpBpC,EAAOD,QAAUA,EAAQ,YAIpB,SAASC,EAAQD,EAASM,GAE/B,YA4BA,SAASS,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAASF,GAEvF,QAAS8B,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCA5BhHC,OAAOC,eAAenD,EAAS,cAC3BoD,OAAO,GAGX,IAAIC,GAAe,WAAc,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAIC,GAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CAAE,GAAIE,GAAaH,EAAMC,EAAIE,GAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,SAAWF,KAAYA,EAAWG,UAAW,GAAMZ,OAAOC,eAAeI,EAAQI,EAAWI,IAAKJ,IAAiB,MAAO,UAAUX,EAAagB,EAAYC,GAAiJ,MAA9HD,IAAYV,EAAiBN,EAAYkB,UAAWF,GAAiBC,GAAaX,EAAiBN,EAAaiB,GAAqBjB,MSxlBjiB1B,EAAAhB,EAAA,GT4lBKiB,EAASR,EAAuBO,GS3lBrCE,EAAAlB,EAAA,GT+lBKmB,EAAWV,EAAuBS,GS9lBvCE,EAAApB,EAAA,GTkmBKqB,EAASZ,EAAuBW,GSjmBrCE,EAAAtB,EAAA,GACAc,GTomBkBL,EAAuBa,GSpmBzCtB,EAAA,ITwmBKe,EAAkBN,EAAuBK,GStmBzBkB,ET4mBJ,WS3mBb,QAAAA,GAAYkH,EAAKpF,GAAWtB,EAAA1C,KAAAkC,GACxBlC,KAAKoJ,IAAMA,EACXpJ,KAAKgE,UAAYA,EACjBhE,KAAKoE,MAAQ,EACbpE,KAAKqJ,2BTq1BR,MApOApG,GAAaf,IACTyB,IAAK,SACLX,MAAO,SShnBLe,EAAK4B,GAER,MADA3F,MAAKsJ,mBAAmBvF,EAAK4B,GACtB3F,KAAKuJ,uBAAuBxF,EAAK4B,MTmnBvChC,IAAK,SACLX,MAAO,SSjnBLmF,EAASC,GACZ,GAAIoB,GAASxJ,KAAKoJ,IAAIK,WAAWtB,EAASC,GACtCsB,EAAaF,EAAOG,IAAI,SAAStJ,GAAI,MAAOA,GAAGiF,MAEnD,OADAtF,MAAKoJ,IAAIQ,SAASzB,EAASC,GACpBpI,KAAK6J,uBAAuBH,MTsnBlC/F,IAAK,MACLX,MAAO,SSpnBRe,EAAK+F,GAEL,IAAI,GADArE,GAAQzF,KAAK+J,mBAAmBhG,EAAK+F,GACjCzG,EAAIoC,EAAMnC,OAAO,EAAGD,GAAG,IAAKA,EAChC,IAAI,GAAI2G,GAAEhK,KAAKqJ,wBAAwB/F,OAAO,EAAG0G,GAAG,IAAKA,EACrD,GAAGvE,EAAMpC,GAAGhD,GAAG8E,QAAQnF,KAAKqJ,wBAAwBW,IAAI,CACpDvE,EAAM6C,OAAOjF,EAAE,GACfrD,KAAKqJ,wBAAwBf,OAAO0B,EAAE,EACtC,OAIZ,GAAI5C,GAAUpH,KAAKoJ,IAAIa,sBAAsBxE,EAC7C,OAAO2B,MTunBNzD,IAAK,MACLX,MAAO,SSrnBRkB,GACA,GAAImD,GAAO,EACP6C,KAFA5D,GAAA,EAAAC,GAAA,EAAAC,EAAAP,MAAA,KAIJ,OAAAQ,GAAAC,EAAcxC,EAAdyC,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAkB,IAAVjG,GAAUoG,EAAAzD,MACV2C,EAAM3F,KAAKoJ,IAAIe,+BAA+B9J,EAAIgH,EAC5C,OAAP1B,GACCuE,EAAOrC,KAAKlC,GACZ0B,EAAO1B,GAGP3F,KAAKqJ,wBAAwBxB,KAAKxH,IAXtC,MAAA8G,GAAAZ,GAAA,EAAAC,EAAAW,EAAA,aAAAb,GAAAI,2BAAA,WAAAH,EAAA,KAAAC,IAiBJ,IAAI,GAHAY,MACAG,EAAc,KACd6C,GAAeC,MAAO,KAAMC,IAAI,MAC5BjH,EAAE6G,EAAO5G,OAAO,EAAGD,GAAG,IAAKA,EAAE,CACjC,GAAIsC,GAAMuE,EAAO7G,EACjB,IAAGkE,IAAgB5B,EAAM,GAA0B,MAArByE,EAAYC,MACtCD,EAAcpK,KAAKuK,YAAYH,EAAazE,OAC5C,CACA,GAAI+B,IAAUzD,KAAM,MAAOuG,KAAMJ,EAAYC,MAAQ,EAAGI,GAAIL,EAAYE,IAAM,EAC9ElD,GAAQS,KAAKH,GACb0C,GAAeC,MAAO1E,EAAK2E,IAAK3E,GAEpC,GAAM,GAAHtC,GAA6B,MAArB+G,EAAYC,MAAc,CACjC,GAAI3C,IAAUzD,KAAM,MAAOuG,KAAMJ,EAAYC,MAAM,EAAGI,GAAIL,EAAYE,IAAI,EAC1ElD,GAAQS,KAAKH,GAEjBH,EAAc5B,EAGlB,IAAI,GAAItC,GAAI6G,EAAO5G,OAAS,EAAGD,GAAK,IAAKA,EACrCrD,KAAKoJ,IAAIf,QAAQ6B,EAAO7G,GAE5B,OAAO+D,MTwoBNzD,IAAK,cACLX,MAAO,SStoBA0H,EAAO/E,GACf,MAAsB,OAAf+E,EAAML,OAAiBA,MAAO1E,EAAK2E,IAAK3E,IAAQ0E,MAAO1E,EAAK2E,IAAKI,EAAMJ,QTyoB7E3G,IAAK,yBACLX,MAAO,SSvoBWwG,GACnB,GAAImB,GAAmB,GAAA1J,aAEvB,OADA0J,GAAiBC,eAAepB,EAAQxJ,KAAK6K,SACtCF,KT0oBNhH,IAAK,qBACLX,MAAO,SSxoBOe,EAAK+F,GACpB,GAAI9E,GAAOhF,KAAKoJ,IAAI0B,YAAYhB,EAAM9E,KAC3B,OAARA,IACCA,EAAO8E,EAAM9E,KAEjB,IAAIS,MACAR,EAAS6E,EAAM7E,OANOuD,GAAA,EAAAC,GAAA,EAAAC,EAAAzC,MAAA,KAO1B,OAAA0C,GAAAC,EAAgB7E,EAAhB4C,OAAAC,cAAA4B,GAAAG,EAAAC,EAAA/B,QAAAC,MAAA0B,GAAA,EAAoB,IAAZzB,GAAY4B,EAAA3F,KAChByC,GAAMoC,KAAK,GAAAtG,cAASwF,EAAM,GAAA1F,cAAW2D,EAAMC,OACzCA,GAToB,MAAAkC,GAAAsB,GAAA,EAAAC,EAAAvB,EAAA,aAAAqB,GAAAI,2BAAA,WAAAH,EAAA,KAAAC,IAW1B,MAAOjD,MTgqBN9B,IAAK,qBACLX,MAAO,SS9pBOe,EAAK4B,GACjB3F,KAAK+K,kBAAkBhH,EAAK4B,GAC3B3F,KAAKoJ,IAAI4B,kBAAkBjH,EAAK4B,GAC5B3F,KAAKiL,mBAAmBlH,EAAK4B,GACjC3F,KAAKoJ,IAAI8B,mBAAmBnH,EAAK4B,GAEjC3F,KAAKoJ,IAAI+B,wBAAwBpH,EAAK4B,EAAK3F,KAAKoL,kBAAkBzF,OT4pBrEhC,IAAK,oBACLX,MAAO,SS1pBMe,EAAK4B,GACnB,GAAIC,GAAiB5F,KAAKoJ,IAAIiC,aAAa1F,EAAM,EACjD,OAAO3F,MAAKsL,cAAc1F,IACnB5F,KAAKuL,sBAAsB3F,IAC3B5F,KAAKwL,mBAAmB5F,EAAgB7B,EAAIT,SAC5CtD,KAAKyL,4BAA4B1H,EAAK4B,MT0pB5ChC,IAAK,8BACLX,MAAO,SSxpBgBe,EAAK4B,GAC7B,GAAI+F,GAAa1L,KAAKoJ,IAAIuC,iBAAiBhG,EAAI,GAC3CiG,EAAa5L,KAAKoJ,IAAIuC,iBAAiBhG,GACvCkG,EAAiBH,EAAWpG,IAEhC,OADAuG,GAAe5G,QAAUlB,EAAIT,QACrBuI,EAAe3D,SAAS0D,MT2pB/BjI,IAAK,qBACLX,MAAO,SSzpBOe,EAAK4B,GACpB,GAAII,GAAkB/F,KAAKoJ,IAAIiC,aAAa1F,EAC5C,OAAO3F,MAAKsL,cAAcvF,IACnB/F,KAAK8L,qBAAqB/F,IAC1B/F,KAAK+L,oBAAoBhG,EAAiBhC,EAAIT,SAC9CtD,KAAKgM,6BAA6BjI,EAAK4B,MTypB7ChC,IAAK,+BACLX,MAAO,SSvpBiBe,EAAK4B,GAC9B,GAAI+F,GAAa1L,KAAKoJ,IAAIuC,iBAAiBhG,EAAI,GAC3CiG,EAAa5L,KAAKoJ,IAAIuC,iBAAiBhG,GACvCsG,EAAmBL,EAAWtG,IAElC,OADA2G,GAAiBhH,QAAUlB,EAAIT,QACvBoI,EAAWxD,SAAS+D,MT0pB3BtI,IAAK,gBACLX,MAAO,SSxpBE+D,GACV,MAAOA,GAAK1G,GAAG2E,KAAKhB,WAAahE,KAAKgE,aT2pBrCL,IAAK,wBACLX,MAAO,SSzpBU+D,GAClB,MAAOA,GAAK1G,GAAG4E,QAAU8B,EAAK1G,GAAG2E,KAAKV,iBT4pBrCX,IAAK,uBACLX,MAAO,SS1pBS+D,GACjB,MAAOA,GAAK1G,GAAG4E,QAAU8B,EAAK1G,GAAG2E,KAAKX,iBT6pBrCV,IAAK,qBACLX,MAAO,SS3pBO+D,EAAMmF,GACrB,MAAOnF,GAAK1G,GAAG4E,OAASiH,EAAc9J,eT8pBrCuB,IAAK,sBACLX,MAAO,SS5pBQ+D,EAAMmF,GACtB,MAAOnF,GAAK1G,GAAG4E,OAASiH,EAAc/J,eT+pBrCwB,IAAK,yBACLX,MAAO,SS7pBWe,EAAK4B,GACxB,GAAIwG,GAAQnM,KAAKoJ,IAAIiC,aAAa1F,GAAKtF,GAAGiF,KACtC8G,EAAmB,GAAAnL,aAEvB,OADAmL,GAAiBC,eAAetI,EAAKoI,EAAOnM,KAAKgE,WAC1CoI,KTgqBNzI,IAAK,oBACLX,MAAO,SS9pBM2C,GAOd,IAAK,GAND2G,GAAQtM,KAAKoJ,IAAIuC,iBAAiBhG,EAAM,GAAGf,OAC3C2H,EAASvM,KAAKoJ,IAAIuC,iBAAiBhG,GAAKf,OACxC4H,EAAMF,EAAM,GACZG,EAAOF,EAAO,GACdvH,EAAO,GAAA7D,iBAAanB,KAAKgE,aAAahE,KAAKoE,QAEtCf,EAAI,EAAGoJ,EAAOD,EAAM,IAAKnJ,EAC9B2B,EAAKb,KAAK0D,KAAK2E,GACfA,EAAOnJ,EAAIiJ,EAAMhJ,OAASgJ,EAAMjJ,GAAKlB,YACrCsK,EAAQpJ,EAAIkJ,EAAOjJ,OAASiJ,EAAOlJ,GAAKjB,WAG5C,OADA4C,GAAKb,KAAK0D,KAAK7H,KAAK0M,wBAAwBF,EAAM,EAAGC,EAAO,IACrDzH,KTiqBNrB,IAAK,0BACLX,MAAO,SS/pBYwJ,EAAKC,GACzB,MAAOjK,MAAKC,MAAMD,KAAKmK,UAAYF,EAAOD,EAAM,IAAMA,MTmqBlDtK,IAGXtC,cS71BoBsC,ET81BpBrC,EAAOD,QAAUA,EAAQ","file":"logootsplit.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"logootsplit\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"logootsplit\"] = factory();\n\telse\n\t\troot[\"logootsplit\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"logootsplit\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"logootsplit\"] = factory();\n\telse\n\t\troot[\"logootsplit\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _Const = __webpack_require__(1);\n\t\n\tvar _Const2 = _interopRequireDefault(_Const);\n\t\n\tvar _RemoteCommand = __webpack_require__(2);\n\t\n\tvar _RemoteCommand2 = _interopRequireDefault(_RemoteCommand);\n\t\n\tvar _Base = __webpack_require__(3);\n\t\n\tvar _Base2 = _interopRequireDefault(_Base);\n\t\n\tvar _CharId = __webpack_require__(4);\n\t\n\tvar _CharId2 = _interopRequireDefault(_CharId);\n\t\n\tvar _Char = __webpack_require__(5);\n\t\n\tvar _Char2 = _interopRequireDefault(_Char);\n\t\n\tvar _Document = __webpack_require__(6);\n\t\n\tvar _Document2 = _interopRequireDefault(_Document);\n\t\n\tvar _Algorithm = __webpack_require__(7);\n\t\n\tvar _Algorithm2 = _interopRequireDefault(_Algorithm);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\twindow.Base = _Base2.default;\n\twindow.RemoteCommand = _RemoteCommand2.default;\n\twindow.CharId = _CharId2.default;\n\twindow.Char = _Char2.default;\n\twindow.Document = _Document2.default;\n\twindow.Algorithm = _Algorithm2.default;\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\twindow.MIN_BASE_EL = 0;\n\t//const MAX_BASE_EL = Math.pow(2, 53) - 1\n\twindow.MAX_BASE_EL = 10000000;\n\twindow.MIN_OFFSET = MIN_BASE_EL + 1;\n\twindow.MAX_OFFSET = MAX_BASE_EL;\n\twindow.FIRST_ASSIGNED_OFFSET = Math.floor(MAX_OFFSET / 2);\n\t\n\t// Char ID is represented by array of numbers, each of them in range [MIN_BASE_EL;MAX_BASE_EL]\n\t// Last element of char ID is called offset, others are called base\n\t// MIN_BASE_EL cannot be used as offset\n\t// When new base is generated, first char assigned to this base get offset FIRST_ASSIGNED_OFFSET, this value decide how much chars we can append and prepend to first char\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar RemoteCommand = function () {\n\t    function RemoteCommand() {\n\t        _classCallCheck(this, RemoteCommand);\n\t    }\n\t\n\t    _createClass(RemoteCommand, [{\n\t        key: \"makeAddCommand\",\n\t        value: function makeAddCommand(str, id, sessionId) {\n\t            this.type = \"add\";\n\t            this.str = str;\n\t            this.id = id;\n\t            this.sessionId = sessionId;\n\t        }\n\t    }, {\n\t        key: \"makeDelCommand\",\n\t        value: function makeDelCommand(ids, sessionId) {\n\t            this.type = \"del\";\n\t            this.ids = ids;\n\t            this.sessionId = sessionId;\n\t        }\n\t    }]);\n\t\n\t    return RemoteCommand;\n\t}();\n\t\n\texports.default = RemoteCommand;\n\tmodule.exports = exports[\"default\"];\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Base = function () {\n\t    function Base(main, sessionId, clock) {\n\t        _classCallCheck(this, Base);\n\t\n\t        this.main = main;\n\t        this.sessionId = sessionId;\n\t        this.clock = clock;\n\t        this.minUsedOffset = MAX_OFFSET + 1;\n\t        this.maxUsedOffset = MIN_OFFSET - 1;\n\t    }\n\t\n\t    _createClass(Base, [{\n\t        key: \"isEqual\",\n\t        value: function isEqual(otherBase) {\n\t            if (this.sessionId !== otherBase.sessionId || this.clock !== otherBase.clock || this.main.length !== otherBase.main.length) return false;\n\t            for (var i = 0; i < this.main.length; ++i) {\n\t                if (this.main[i] != otherBase.main[i]) return false;\n\t            }return true;\n\t        }\n\t    }, {\n\t        key: \"isPrefix\",\n\t        value: function isPrefix(charId) {\n\t            var thisId = this.fullBase;\n\t            var otherId = charId.fullId;\n\t            if (thisId.length > otherId.length) return false;\n\t            for (var i = 0; i < thisId.length; ++i) {\n\t                if (thisId[i] != otherId[i]) return false;\n\t            }return true;\n\t        }\n\t    }, {\n\t        key: \"fullBase\",\n\t        get: function get() {\n\t            return this.main.concat([this.sessionId], [this.clock]);\n\t        }\n\t    }, {\n\t        key: \"copy\",\n\t        get: function get() {\n\t            return new Base(this.main.slice(), this.sessionId, this.clock);\n\t        }\n\t    }]);\n\t\n\t    return Base;\n\t}();\n\t\n\texports.default = Base;\n\tmodule.exports = exports[\"default\"];\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar CharId = function () {\n\t    function CharId(base, offset) {\n\t        _classCallCheck(this, CharId);\n\t\n\t        this.base = base;\n\t        this.offset = offset;\n\t        if (this.offset > base.maxUsedOffset) base.maxUsedOffset = this.offset;\n\t        if (this.offset < base.minUsedOffset) base.minUsedOffset = offset;\n\t    }\n\t\n\t    _createClass(CharId, [{\n\t        key: \"isEqual\",\n\t        value: function isEqual(otherChar) {\n\t            return this.base.isEqual(otherChar.base) && this.offset === otherChar.offset;\n\t        }\n\t    }, {\n\t        key: \"isBigger\",\n\t        value: function isBigger(otherCharId) {\n\t            var thisId = this.fullId,\n\t                otherId = otherCharId.fullId;\n\t            for (var i = 0; i < Math.min(thisId.length, otherId.length); ++i) {\n\t                if (thisId[i] !== otherId[i]) return thisId[i] > otherId[i];\n\t            }return thisId.length > otherId.length;\n\t        }\n\t    }, {\n\t        key: \"fullId\",\n\t        get: function get() {\n\t            return this.base.fullBase.concat(this.offset);\n\t        }\n\t    }, {\n\t        key: \"copy\",\n\t        get: function get() {\n\t            return new CharId(this.base.copy, this.offset);\n\t        }\n\t    }]);\n\t\n\t    return CharId;\n\t}();\n\t\n\texports.default = CharId;\n\tmodule.exports = exports[\"default\"];\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Char = function () {\n\t    function Char(value, id) {\n\t        _classCallCheck(this, Char);\n\t\n\t        this.value = value;\n\t        this.id = id;\n\t    }\n\t\n\t    _createClass(Char, [{\n\t        key: \"isEqual\",\n\t        value: function isEqual(otherChar) {\n\t            return this.value === otherChar.value && this.id.isEqual(otherChar.id);\n\t        }\n\t    }]);\n\t\n\t    return Char;\n\t}();\n\t\n\texports.default = Char;\n\tmodule.exports = exports[\"default\"];\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Base = __webpack_require__(3);\n\t\n\tvar _Base2 = _interopRequireDefault(_Base);\n\t\n\tvar _CharId = __webpack_require__(4);\n\t\n\tvar _CharId2 = _interopRequireDefault(_CharId);\n\t\n\tvar _Char = __webpack_require__(5);\n\t\n\tvar _Char2 = _interopRequireDefault(_Char);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t// At the beginning document contains two chars: DOC_BEG and DOC_END, they're not actual\n\t// text chars and are only used to represent start and end of the document\n\t\n\tvar DOC_BEG = new _Char2.default(null, new _CharId2.default(new _Base2.default([MIN_BASE_EL - 1], MIN_BASE_EL - 1, MIN_BASE_EL - 1), MIN_OFFSET - 1));\n\tvar DOC_END = new _Char2.default(null, new _CharId2.default(new _Base2.default([MAX_BASE_EL + 1], MAX_BASE_EL + 1, MAX_BASE_EL + 1), MAX_OFFSET + 1));\n\t\n\tvar Document = function () {\n\t    function Document() {\n\t        _classCallCheck(this, Document);\n\t\n\t        this.chars = [DOC_BEG, DOC_END];\n\t        this.bases = [];\n\t    }\n\t\n\t    _createClass(Document, [{\n\t        key: 'insertStrAppended',\n\t        value: function insertStrAppended(str, pos) {\n\t            var charWeAppendTo = this.chars[pos - 1];\n\t            var base = charWeAppendTo.id.base;\n\t            var firstOffset = charWeAppendTo.id.offset + 1;\n\t            this.insertStringWithExistingBase(str, pos, base, firstOffset);\n\t        }\n\t    }, {\n\t        key: 'insertStrPrepended',\n\t        value: function insertStrPrepended(str, pos) {\n\t            var charWePrependTo = this.chars[pos];\n\t            var base = charWePrependTo.id.base;\n\t            var firstOffset = charWePrependTo.id.offset - str.length;\n\t            this.insertStringWithExistingBase(str, pos, base, firstOffset);\n\t        }\n\t    }, {\n\t        key: 'insertStringWithExistingBase',\n\t        value: function insertStringWithExistingBase(str, pos, base) {\n\t            var firstOffset = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : FIRST_ASSIGNED_OFFSET;\n\t\n\t            this.insertStrAtPos(str, pos, base, firstOffset);\n\t            this.sortDocumentPart(pos, this.chars.length - 1);\n\t        }\n\t    }, {\n\t        key: 'insertStringWithNewBase',\n\t        value: function insertStringWithNewBase(str, pos, base) {\n\t            this.addBase(base);\n\t            this.insertStringWithExistingBase(str, pos, base);\n\t        }\n\t    }, {\n\t        key: 'insertStrAtPos',\n\t        value: function insertStrAtPos(str, pos, base, firstCharOffset) {\n\t            var offset = firstCharOffset;\n\t            var _iteratorNormalCompletion = true;\n\t            var _didIteratorError = false;\n\t            var _iteratorError = undefined;\n\t\n\t            try {\n\t                for (var _iterator = str[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t                    var char = _step.value;\n\t\n\t                    var newId = new _CharId2.default(base, offset);\n\t                    var newChar = new _Char2.default(char, newId);\n\t                    this.insertCharAtPos(newChar, pos);\n\t                    ++pos;\n\t                    ++offset;\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError = true;\n\t                _iteratorError = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion && _iterator.return) {\n\t                        _iterator.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError) {\n\t                        throw _iteratorError;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }, {\n\t        key: 'addCharsAndGetChanges',\n\t        value: function addCharsAndGetChanges(chars) {\n\t            var changes = [];\n\t            if (chars.length == 0) return changes;\n\t            var pos0 = this.getPosOfFirstCharWithBiggerId(chars[0].id);\n\t            var prevUsedPos = null;\n\t            var changeStr = \"\";\n\t\n\t            for (var i = chars.length - 1; i >= 0; --i) {\n\t                var pos = this.getPosOfFirstCharWithBiggerIdStartingFrom(chars[i].id, pos0);\n\t                if (prevUsedPos === pos || changeStr === \"\") {\n\t                    changeStr = chars[i].value + changeStr;\n\t                } else {\n\t                    var change = { type: \"add\", string: changeStr, position: prevUsedPos - 1 }; //ace position, not loogot\n\t                    changes.push(change);\n\t                    changeStr = chars[i].value;\n\t                }\n\t                if (i == 0 && changeStr !== \"\") changes.push({ type: \"add\", string: changeStr, position: pos - 1 });\n\t                this.insertCharAtPos(chars[i], pos);\n\t                prevUsedPos = pos;\n\t            }\n\t\n\t            return changes;\n\t        }\n\t    }, {\n\t        key: 'sortDocumentPart',\n\t        value: function sortDocumentPart(sortBeg, sortEnd) {\n\t            for (var pos = sortBeg + 1; pos <= sortEnd; ++pos) {\n\t                var temp = this.chars[pos];\n\t                var prevPos = pos - 1;\n\t                for (; prevPos >= 1 && this.chars[prevPos].id.isBigger(temp.id); --prevPos) {\n\t                    this.chars[prevPos + 1] = this.chars[prevPos];\n\t                }this.chars[prevPos + 1] = temp;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'addBase',\n\t        value: function addBase(base) {\n\t            this.bases.push(base);\n\t        }\n\t    }, {\n\t        key: 'delChars',\n\t        value: function delChars(fromPos, toPos) {\n\t            for (var pos = toPos; pos >= fromPos; --pos) {\n\t                this.delChar(pos);\n\t            }\n\t        }\n\t    }, {\n\t        key: 'delChar',\n\t        value: function delChar(pos) {\n\t            this.chars.splice(pos, 1);\n\t        }\n\t    }, {\n\t        key: 'getPosOfCharWithId',\n\t        value: function getPosOfCharWithId(id) {\n\t            for (var pos = 0; pos < this.chars.length; ++pos) {\n\t                if (this.chars[pos].id.isEqual(id)) return pos;\n\t            }return null;\n\t        }\n\t    }, {\n\t        key: 'getPosOfCharWithIdStartingFrom',\n\t        value: function getPosOfCharWithIdStartingFrom(id, startPos) {\n\t            for (var pos = startPos; pos < this.chars.length; ++pos) {\n\t                if (this.chars[pos].id.isEqual(id)) return pos;\n\t            }return null;\n\t        }\n\t    }, {\n\t        key: 'getPosOfFirstCharWithBiggerId',\n\t        value: function getPosOfFirstCharWithBiggerId(charId) {\n\t            for (var pos = 1; pos < this.chars.length; ++pos) {\n\t                if (this.chars[pos].id.isBigger(charId)) return pos;\n\t            }return null;\n\t        }\n\t    }, {\n\t        key: 'getPosOfFirstCharWithBiggerIdStartingFrom',\n\t        value: function getPosOfFirstCharWithBiggerIdStartingFrom(charId, startPos) {\n\t            for (var pos = startPos; pos < this.chars.length; ++pos) {\n\t                if (this.chars[pos].id.isBigger(charId)) return pos;\n\t            }return null;\n\t        }\n\t    }, {\n\t        key: 'getCharAtPos',\n\t        value: function getCharAtPos(pos) {\n\t            return this.chars[pos];\n\t        }\n\t    }, {\n\t        key: 'getIdOfCharAtPos',\n\t        value: function getIdOfCharAtPos(pos) {\n\t            return this.chars[pos].id;\n\t        }\n\t    }, {\n\t        key: 'getCharIds',\n\t        value: function getCharIds(fromPos, toPos) {\n\t            var ids = [];\n\t            for (var i = fromPos; i <= toPos; ++i) {\n\t                ids.push(this.chars[i].id);\n\t            }return ids;\n\t        }\n\t    }, {\n\t        key: 'getSameBase',\n\t        value: function getSameBase(base) {\n\t            var _iteratorNormalCompletion2 = true;\n\t            var _didIteratorError2 = false;\n\t            var _iteratorError2 = undefined;\n\t\n\t            try {\n\t                for (var _iterator2 = this.bases[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t                    var b = _step2.value;\n\t\n\t                    if (base.isEqual(b)) return b;\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError2 = true;\n\t                _iteratorError2 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t                        _iterator2.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError2) {\n\t                        throw _iteratorError2;\n\t                    }\n\t                }\n\t            }\n\t\n\t            return null;\n\t        }\n\t    }, {\n\t        key: 'insertCharAtPos',\n\t        value: function insertCharAtPos(char, pos) {\n\t            this.chars.splice(pos, 0, char);\n\t        }\n\t    }, {\n\t        key: 'isEmpty',\n\t        value: function isEmpty() {\n\t            return this.chars.length == 2;\n\t        }\n\t    }, {\n\t        key: 'showDetailedSessionState',\n\t        value: function showDetailedSessionState(logHeader) {\n\t            console.log(logHeader);\n\t            for (var i = 0; i < this.chars.length; ++i) {\n\t                console.log(\"----- \" + this.getCharStateStr(this.chars[i]));\n\t            }\n\t        }\n\t    }, {\n\t        key: 'getCharStateStr',\n\t        value: function getCharStateStr(char) {\n\t            return char.value + \":  \" + char.id.fullId.toString();\n\t        }\n\t    }, {\n\t        key: 'text',\n\t        get: function get() {\n\t            var text = \"\";\n\t            for (var i = 0; i < this.chars.length; ++i) {\n\t                text += this.chars[i].value;\n\t            }return text;\n\t        }\n\t    }, {\n\t        key: 'textTest',\n\t        get: function get() {\n\t            var text = \"\";\n\t            for (var i = 0; i < this.chars.length; ++i) {\n\t                text += i == 0 || i == this.chars.length - 1 ? \"\" : this.chars[i].value;\n\t                if (i + 1 < this.chars.length && !this.chars[i].id.base.isEqual(this.chars[i + 1].id.base)) text += \"|\";\n\t            }\n\t            return text;\n\t        }\n\t    }]);\n\t\n\t    return Document;\n\t}();\n\t\n\texports.default = Document;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Base = __webpack_require__(3);\n\t\n\tvar _Base2 = _interopRequireDefault(_Base);\n\t\n\tvar _CharId = __webpack_require__(4);\n\t\n\tvar _CharId2 = _interopRequireDefault(_CharId);\n\t\n\tvar _Char = __webpack_require__(5);\n\t\n\tvar _Char2 = _interopRequireDefault(_Char);\n\t\n\tvar _Document = __webpack_require__(6);\n\t\n\tvar _Document2 = _interopRequireDefault(_Document);\n\t\n\tvar _RemoteCommand = __webpack_require__(2);\n\t\n\tvar _RemoteCommand2 = _interopRequireDefault(_RemoteCommand);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Algorithm = function () {\n\t    function Algorithm(doc, sessionId) {\n\t        _classCallCheck(this, Algorithm);\n\t\n\t        this.doc = doc;\n\t        this.sessionId = sessionId;\n\t        this.clock = 0;\n\t        this.idsOfCharsToDeleteLater = [];\n\t    }\n\t\n\t    _createClass(Algorithm, [{\n\t        key: 'insert',\n\t        value: function insert(str, pos) {\n\t            this.insertIntoDocument(str, pos);\n\t            return this.createRemoteAddCommand(str, pos);\n\t        }\n\t    }, {\n\t        key: 'remove',\n\t        value: function remove(fromPos, toPos) {\n\t            var delIds = this.doc.getCharIds(fromPos, toPos);\n\t            var delIdsCopy = delIds.map(function (id) {\n\t                return id.copy;\n\t            });\n\t            this.doc.delChars(fromPos, toPos);\n\t            return this.createRemoteDelCommand(delIdsCopy);\n\t        }\n\t    }, {\n\t        key: 'add',\n\t        value: function add(str, strId) {\n\t            var chars = this.createCharsFromStr(str, strId);\n\t            for (var i = chars.length - 1; i >= 0; --i) {\n\t                for (var j = this.idsOfCharsToDeleteLater.length - 1; j >= 0; --j) {\n\t                    if (chars[i].id.isEqual(this.idsOfCharsToDeleteLater[j])) {\n\t                        chars.splice(i, 1);\n\t                        this.idsOfCharsToDeleteLater.splice(j, 1);\n\t                        break;\n\t                    }\n\t                }\n\t            }\n\t            var changes = this.doc.addCharsAndGetChanges(chars);\n\t            return changes;\n\t        }\n\t    }, {\n\t        key: 'del',\n\t        value: function del(ids) {\n\t            var pos0 = 1;\n\t            var delPos = [];\n\t\n\t            var _iteratorNormalCompletion = true;\n\t            var _didIteratorError = false;\n\t            var _iteratorError = undefined;\n\t\n\t            try {\n\t                for (var _iterator = ids[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t                    var id = _step.value;\n\t\n\t                    var _pos = this.doc.getPosOfCharWithIdStartingFrom(id, pos0);\n\t                    if (_pos != null) {\n\t                        delPos.push(_pos);\n\t                        pos0 = _pos;\n\t                    } else this.idsOfCharsToDeleteLater.push(id);\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError = true;\n\t                _iteratorError = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion && _iterator.return) {\n\t                        _iterator.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError) {\n\t                        throw _iteratorError;\n\t                    }\n\t                }\n\t            }\n\t\n\t            var changes = [];\n\t            var prevUsedPos = null;\n\t            var delPosRange = { start: null, end: null };\n\t            for (var i = delPos.length - 1; i >= 0; --i) {\n\t                var pos = delPos[i];\n\t                if (prevUsedPos === pos + 1 || delPosRange.start == null) delPosRange = this.extendRange(delPosRange, pos);else {\n\t                    var change = { type: \"del\", from: delPosRange.start - 1, to: delPosRange.end - 1 };\n\t                    changes.push(change);\n\t                    delPosRange = { start: pos, end: pos };\n\t                }\n\t                if (i == 0 && delPosRange.start != null) {\n\t                    var _change = { type: \"del\", from: delPosRange.start - 1, to: delPosRange.end - 1 };\n\t                    changes.push(_change);\n\t                }\n\t                prevUsedPos = pos;\n\t            }\n\t\n\t            for (var _i = delPos.length - 1; _i >= 0; --_i) {\n\t                this.doc.delChar(delPos[_i]);\n\t            }return changes;\n\t        }\n\t    }, {\n\t        key: 'extendRange',\n\t        value: function extendRange(range, pos) {\n\t            return range.start == null ? { start: pos, end: pos } : { start: pos, end: range.end };\n\t        }\n\t    }, {\n\t        key: 'createRemoteDelCommand',\n\t        value: function createRemoteDelCommand(delIds) {\n\t            var remoteDelCommand = new _RemoteCommand2.default();\n\t            remoteDelCommand.makeDelCommand(delIds, this.session);\n\t            return remoteDelCommand;\n\t        }\n\t    }, {\n\t        key: 'createCharsFromStr',\n\t        value: function createCharsFromStr(str, strId) {\n\t            var base = this.doc.getSameBase(strId.base);\n\t            if (base == null) base = strId.base;\n\t\n\t            var chars = [];\n\t            var offset = strId.offset;\n\t            var _iteratorNormalCompletion2 = true;\n\t            var _didIteratorError2 = false;\n\t            var _iteratorError2 = undefined;\n\t\n\t            try {\n\t                for (var _iterator2 = str[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t                    var char = _step2.value;\n\t\n\t                    chars.push(new _Char2.default(char, new _CharId2.default(base, offset)));\n\t                    ++offset;\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError2 = true;\n\t                _iteratorError2 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t                        _iterator2.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError2) {\n\t                        throw _iteratorError2;\n\t                    }\n\t                }\n\t            }\n\t\n\t            return chars;\n\t        }\n\t    }, {\n\t        key: 'insertIntoDocument',\n\t        value: function insertIntoDocument(str, pos) {\n\t            if (this.canInsertAppended(str, pos)) this.doc.insertStrAppended(str, pos);else if (this.canInsertPrepended(str, pos)) this.doc.insertStrPrepended(str, pos);else this.doc.insertStringWithNewBase(str, pos, this.generateBaseAtPos(pos));\n\t        }\n\t    }, {\n\t        key: 'canInsertAppended',\n\t        value: function canInsertAppended(str, pos) {\n\t            var charWeAppendTo = this.doc.getCharAtPos(pos - 1);\n\t            return this.isSameSession(charWeAppendTo) && this.isHighestOffsetInBase(charWeAppendTo) && this.isSpaceInBaseAfter(charWeAppendTo, str.length) && this.isNotGoingToOverlapAfterApp(str, pos);\n\t        }\n\t    }, {\n\t        key: 'isNotGoingToOverlapAfterApp',\n\t        value: function isNotGoingToOverlapAfterApp(str, pos) {\n\t            var prevCharId = this.doc.getIdOfCharAtPos(pos - 1);\n\t            var nextCharId = this.doc.getIdOfCharAtPos(pos);\n\t            var lastIdOfAppStr = prevCharId.copy;\n\t            lastIdOfAppStr.offset += str.length;\n\t            return !lastIdOfAppStr.isBigger(nextCharId);\n\t        }\n\t    }, {\n\t        key: 'canInsertPrepended',\n\t        value: function canInsertPrepended(str, pos) {\n\t            var charWePrependTo = this.doc.getCharAtPos(pos);\n\t            return this.isSameSession(charWePrependTo) && this.isLowestOffsetInBase(charWePrependTo) && this.isSpaceInBaseBefore(charWePrependTo, str.length) && this.isNotGoingToOverlapAfterPrep(str, pos);\n\t        }\n\t    }, {\n\t        key: 'isNotGoingToOverlapAfterPrep',\n\t        value: function isNotGoingToOverlapAfterPrep(str, pos) {\n\t            var prevCharId = this.doc.getIdOfCharAtPos(pos - 1);\n\t            var nextCharId = this.doc.getIdOfCharAtPos(pos);\n\t            var firstIdOfPrepStr = nextCharId.copy;\n\t            firstIdOfPrepStr.offset -= str.length;\n\t            return !prevCharId.isBigger(firstIdOfPrepStr);\n\t        }\n\t    }, {\n\t        key: 'isSameSession',\n\t        value: function isSameSession(char) {\n\t            return char.id.base.sessionId == this.sessionId;\n\t        }\n\t    }, {\n\t        key: 'isHighestOffsetInBase',\n\t        value: function isHighestOffsetInBase(char) {\n\t            return char.id.offset == char.id.base.maxUsedOffset;\n\t        }\n\t    }, {\n\t        key: 'isLowestOffsetInBase',\n\t        value: function isLowestOffsetInBase(char) {\n\t            return char.id.offset == char.id.base.minUsedOffset;\n\t        }\n\t    }, {\n\t        key: 'isSpaceInBaseAfter',\n\t        value: function isSpaceInBaseAfter(char, spaceLength) {\n\t            return char.id.offset + spaceLength < MAX_BASE_EL;\n\t        }\n\t    }, {\n\t        key: 'isSpaceInBaseBefore',\n\t        value: function isSpaceInBaseBefore(char, spaceLength) {\n\t            return char.id.offset - spaceLength > MIN_BASE_EL;\n\t        }\n\t    }, {\n\t        key: 'createRemoteAddCommand',\n\t        value: function createRemoteAddCommand(str, pos) {\n\t            var addId = this.doc.getCharAtPos(pos).id.copy;\n\t            var remoteAddCommand = new _RemoteCommand2.default();\n\t            remoteAddCommand.makeAddCommand(str, addId, this.sessionId);\n\t            return remoteAddCommand;\n\t        }\n\t    }, {\n\t        key: 'generateBaseAtPos',\n\t        value: function generateBaseAtPos(pos) {\n\t            var idLow = this.doc.getIdOfCharAtPos(pos - 1).fullId;\n\t            var idHigh = this.doc.getIdOfCharAtPos(pos).fullId;\n\t            var low = idLow[0];\n\t            var high = idHigh[0];\n\t            var base = new _Base2.default([], this.sessionId, ++this.clock);\n\t\n\t            for (var i = 1; high - low < 2; ++i) {\n\t                base.main.push(low);\n\t                low = i < idLow.length ? idLow[i] : MIN_BASE_EL;\n\t                high = i < idHigh.length ? idHigh[i] : MAX_BASE_EL;\n\t            }\n\t            base.main.push(this.getRandomElementBetween(low + 1, high - 1));\n\t            return base;\n\t        }\n\t    }, {\n\t        key: 'getRandomElementBetween',\n\t        value: function getRandomElementBetween(low, high) {\n\t            return Math.floor(Math.random() * (high - low + 1)) + low;\n\t        }\n\t    }]);\n\t\n\t    return Algorithm;\n\t}();\n\t\n\texports.default = Algorithm;\n\tmodule.exports = exports['default'];\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** logootsplit.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 2b3fee4db4729dcdc6c4\n **/","import Const from \"./Main/Const.js\";\r\n\r\nimport RemoteCommand from \"./Main/RemoteCommand.js\";\r\nimport Base from \"./Main/LogootDoc/Base.js\";\r\nimport CharId from \"./Main/LogootDoc/CharId.js\";\r\nimport Char from \"./Main/LogootDoc/Char.js\";\r\nimport Document from \"./Main/LogootDoc/Document.js\";\r\nimport Algorithm from \"./Main/Algorithm.js\";\r\n\r\nwindow.Base = Base;\r\nwindow.RemoteCommand = RemoteCommand;\r\nwindow.CharId = CharId;\r\nwindow.Char = Char;\r\nwindow.Document = Document;\r\nwindow.Algorithm = Algorithm;\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","window.MIN_BASE_EL = 0\r\n//const MAX_BASE_EL = Math.pow(2, 53) - 1\r\nwindow.MAX_BASE_EL = 10000000\r\nwindow.MIN_OFFSET = MIN_BASE_EL + 1\r\nwindow.MAX_OFFSET = MAX_BASE_EL\r\nwindow.FIRST_ASSIGNED_OFFSET = Math.floor(MAX_OFFSET/2)\r\n\r\n// Char ID is represented by array of numbers, each of them in range [MIN_BASE_EL;MAX_BASE_EL]\r\n// Last element of char ID is called offset, others are called base\r\n// MIN_BASE_EL cannot be used as offset\r\n// When new base is generated, first char assigned to this base get offset FIRST_ASSIGNED_OFFSET, this value decide how much chars we can append and prepend to first char\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Main/Const.js\n **/","export default class RemoteCommand{\r\n    constructor(){}\r\n\r\n    makeAddCommand(str, id, sessionId){\r\n        this.type = \"add\"\r\n        this.str = str\r\n        this.id = id\r\n        this.sessionId = sessionId\r\n    }\r\n\r\n    makeDelCommand(ids, sessionId){\r\n        this.type = \"del\"\r\n        this.ids = ids\r\n        this.sessionId = sessionId\r\n    }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/Main/RemoteCommand.js\n **/","export default class Base {\r\n    constructor(main, sessionId, clock) {\r\n        this.main = main\r\n        this.sessionId = sessionId\r\n        this.clock = clock\r\n        this.minUsedOffset = MAX_OFFSET + 1\r\n        this.maxUsedOffset = MIN_OFFSET - 1\r\n    }\r\n\r\n    get fullBase() {\r\n        return this.main.concat([this.sessionId], [this.clock])\r\n    }\r\n\r\n    get copy(){\r\n        return new Base(this.main.slice(), this.sessionId, this.clock) \r\n    }\r\n\r\n    isEqual(otherBase) {\r\n        if (this.sessionId !== otherBase.sessionId || this.clock !== otherBase.clock || this.main.length !== otherBase.main.length)\r\n            return false\r\n        for (let i = 0; i < this.main.length; ++i)\r\n            if (this.main[i] != otherBase.main[i])\r\n                return false\r\n\r\n        return true\r\n    }\r\n\r\n    isPrefix(charId){\r\n        let thisId = this.fullBase\r\n        let otherId = charId.fullId\r\n        if(thisId.length > otherId.length)\r\n            return false\r\n        for(let i=0; i<thisId.length; ++i)\r\n            if(thisId[i] != otherId[i])\r\n                return false\r\n        return true;\r\n    }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/Main/LogootDoc/Base.js\n **/","export default class CharId {\r\n    constructor(base, offset) {\r\n        this.base = base\r\n        this.offset = offset\r\n        if (this.offset > base.maxUsedOffset)\r\n            base.maxUsedOffset = this.offset\r\n        if (this.offset < base.minUsedOffset)\r\n            base.minUsedOffset = offset\r\n    }\r\n\r\n    get fullId() {\r\n        return this.base.fullBase.concat(this.offset)\r\n    }\r\n\r\n    get copy(){\r\n        return new CharId(this.base.copy, this.offset)\r\n    }\r\n\r\n    isEqual(otherChar) {\r\n        return this.base.isEqual(otherChar.base)\r\n            && this.offset === otherChar.offset\r\n    }\r\n\r\n    isBigger(otherCharId) {\r\n        let thisId = this.fullId, otherId = otherCharId.fullId\r\n        for (let i = 0; i < Math.min(thisId.length, otherId.length); ++i)\r\n            if (thisId[i] !== otherId[i])\r\n                return thisId[i] > otherId[i]\r\n        return thisId.length > otherId.length\r\n    }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/Main/LogootDoc/CharId.js\n **/","export default class Char {\r\n    constructor(value, id) {\r\n        this.value = value\r\n        this.id = id\r\n    }\r\n\r\n    isEqual(otherChar) {\r\n        return this.value === otherChar.value\r\n            && this.id.isEqual(otherChar.id)\r\n    }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/Main/LogootDoc/Char.js\n **/","import Base from './Base';\r\nimport CharId from './CharId';\r\nimport Char from './Char';\r\n\r\n// At the beginning document contains two chars: DOC_BEG and DOC_END, they're not actual\r\n// text chars and are only used to represent start and end of the document\r\n\r\nvar DOC_BEG = new Char(null, new CharId(new Base([MIN_BASE_EL - 1], MIN_BASE_EL - 1, MIN_BASE_EL - 1), MIN_OFFSET - 1))\r\nvar DOC_END = new Char(null, new CharId(new Base([MAX_BASE_EL + 1], MAX_BASE_EL + 1, MAX_BASE_EL + 1), MAX_OFFSET + 1))\r\n\r\nexport default class Document {\r\n    constructor() {\r\n        this.chars = [DOC_BEG, DOC_END]\r\n        this.bases = []\r\n    }\r\n\r\n    insertStrAppended(str, pos) {\r\n        let charWeAppendTo = this.chars[pos - 1];\r\n        let base = charWeAppendTo.id.base\r\n        let firstOffset = charWeAppendTo.id.offset + 1\r\n        this.insertStringWithExistingBase(str, pos, base, firstOffset)\r\n    }\r\n\r\n    insertStrPrepended(str, pos) {\r\n        let charWePrependTo = this.chars[pos];\r\n        let base = charWePrependTo.id.base\r\n        let firstOffset = charWePrependTo.id.offset - str.length\r\n        this.insertStringWithExistingBase(str, pos, base, firstOffset)\r\n    }\r\n\r\n    insertStringWithExistingBase(str, pos, base, firstOffset = FIRST_ASSIGNED_OFFSET) {\r\n        this.insertStrAtPos(str, pos, base, firstOffset)\r\n        this.sortDocumentPart(pos, this.chars.length - 1)\r\n    }\r\n\r\n    insertStringWithNewBase(str, pos, base) {\r\n        this.addBase(base)\r\n        this.insertStringWithExistingBase(str, pos, base)\r\n    }\r\n\r\n    insertStrAtPos(str, pos, base, firstCharOffset) {\r\n        let offset = firstCharOffset\r\n        for (let char of str) {\r\n            let newId = new CharId(base, offset)\r\n            let newChar = new Char(char, newId)\r\n            this.insertCharAtPos(newChar, pos)\r\n            ++pos\r\n            ++offset\r\n        }\r\n    }\r\n\r\n    addCharsAndGetChanges(chars) {\r\n        let changes = []\r\n        if (chars.length == 0)\r\n            return changes\r\n        let pos0 = this.getPosOfFirstCharWithBiggerId(chars[0].id)\r\n        let prevUsedPos = null\r\n        let changeStr = \"\"\r\n\r\n        for (let i = chars.length - 1; i >= 0; --i) {\r\n            let pos = this.getPosOfFirstCharWithBiggerIdStartingFrom(chars[i].id, pos0)\r\n            if (prevUsedPos === pos || changeStr === \"\") {\r\n                changeStr = chars[i].value + changeStr\r\n            } else {\r\n                let change = { type: \"add\", string: changeStr, position: prevUsedPos - 1 } //ace position, not loogot\r\n                changes.push(change)\r\n                changeStr = chars[i].value\r\n            }\r\n            if (i == 0 && changeStr !== \"\")\r\n                changes.push({ type: \"add\", string: changeStr, position: pos - 1 })\r\n            this.insertCharAtPos(chars[i], pos)\r\n            prevUsedPos = pos\r\n        }\r\n        \r\n        return changes\r\n    }\r\n\r\n\r\n    sortDocumentPart(sortBeg, sortEnd) {\r\n        for (var pos = sortBeg + 1; pos <= sortEnd; ++pos) {\r\n            var temp = this.chars[pos];\r\n            var prevPos = pos - 1;\r\n            for (; prevPos >= 1 && this.chars[prevPos].id.isBigger(temp.id); --prevPos)\r\n                this.chars[prevPos + 1] = this.chars[prevPos];\r\n            this.chars[prevPos + 1] = temp;\r\n        }\r\n    }\r\n\r\n    addBase(base) {\r\n        this.bases.push(base)\r\n    }\r\n\r\n    delChars(fromPos, toPos) {\r\n        for (let pos = toPos; pos >= fromPos; --pos)\r\n            this.delChar(pos)\r\n    }\r\n\r\n    delChar(pos) {\r\n        this.chars.splice(pos, 1)\r\n    }\r\n\r\n    getPosOfCharWithId(id) {\r\n        for (let pos = 0; pos < this.chars.length; ++pos)\r\n            if (this.chars[pos].id.isEqual(id))\r\n                return pos\r\n        return null\r\n    }\r\n\r\n    getPosOfCharWithIdStartingFrom(id, startPos){\r\n        for (let pos = startPos; pos < this.chars.length; ++pos)\r\n            if (this.chars[pos].id.isEqual(id))\r\n                return pos\r\n        return null\r\n    }\r\n\r\n    getPosOfFirstCharWithBiggerId(charId) {\r\n        for (let pos = 1; pos < this.chars.length; ++pos)\r\n            if (this.chars[pos].id.isBigger(charId))\r\n                return pos\r\n        return null\r\n    }\r\n\r\n    getPosOfFirstCharWithBiggerIdStartingFrom(charId, startPos) {\r\n        for (let pos = startPos; pos < this.chars.length; ++pos)\r\n            if (this.chars[pos].id.isBigger(charId))\r\n                return pos\r\n        return null\r\n    }\r\n\r\n    getCharAtPos(pos) {\r\n        return this.chars[pos]\r\n    }\r\n\r\n    getIdOfCharAtPos(pos) {\r\n        return this.chars[pos].id\r\n    }\r\n\r\n    getCharIds(fromPos, toPos) {\r\n        let ids = []\r\n        for (let i = fromPos; i <= toPos; ++i)\r\n            ids.push(this.chars[i].id)\r\n        return ids;\r\n    }\r\n    getSameBase(base) {\r\n        for (let b of this.bases)\r\n            if (base.isEqual(b))\r\n                return b\r\n        return null\r\n    }\r\n\r\n    insertCharAtPos(char, pos) {\r\n        this.chars.splice(pos, 0, char)\r\n    }\r\n\r\n    isEmpty() {\r\n        return this.chars.length == 2\r\n    }\r\n\r\n    get text() {\r\n        let text = \"\"\r\n        for (let i = 0; i < this.chars.length; ++i)\r\n            text += this.chars[i].value\r\n        return text\r\n    }\r\n\r\n    get textTest() {\r\n        let text = \"\"\r\n        for (let i = 0; i < this.chars.length; ++i) {\r\n            text += (i == 0 || i == this.chars.length - 1 ? \"\" : this.chars[i].value)\r\n            if (i + 1 < this.chars.length && !(this.chars[i].id.base.isEqual(this.chars[i + 1].id.base)))\r\n                text += \"|\"\r\n        }\r\n        return text\r\n    }\r\n\r\n    showDetailedSessionState(logHeader){\r\n        console.log(logHeader)\r\n        for(let i=0; i < this.chars.length; ++i)\r\n            console.log(\"----- \" + this.getCharStateStr(this.chars[i]))\r\n    }\r\n\r\n    getCharStateStr(char){\r\n        return char.value + \":  \" + char.id.fullId.toString()\r\n    }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/Main/LogootDoc/Document.js\n **/","import Base from './LogootDoc/Base';\r\nimport CharId from './LogootDoc/CharId';\r\nimport Char from './LogootDoc/Char';\r\nimport Document from './LogootDoc/Document';\r\nimport RemoteCommand from './RemoteCommand';\r\n\r\nexport default class Algorithm {\r\n    constructor(doc, sessionId) {\r\n        this.doc = doc\r\n        this.sessionId = sessionId\r\n        this.clock = 0\r\n        this.idsOfCharsToDeleteLater = []\r\n    }\r\n\r\n    insert(str, pos){\r\n        this.insertIntoDocument(str, pos)\r\n        return this.createRemoteAddCommand(str, pos)\r\n    }\r\n\r\n    remove(fromPos, toPos){\r\n        let delIds = this.doc.getCharIds(fromPos, toPos)\r\n        let delIdsCopy = delIds.map(function(id){return id.copy})\r\n        this.doc.delChars(fromPos, toPos)\r\n        return this.createRemoteDelCommand(delIdsCopy)\r\n    }\r\n\r\n    add(str, strId){\r\n        let chars = this.createCharsFromStr(str, strId)\r\n        for(let i = chars.length-1; i>=0; --i){\r\n            for(let j=this.idsOfCharsToDeleteLater.length-1; j>=0; --j){\r\n                if(chars[i].id.isEqual(this.idsOfCharsToDeleteLater[j])){\r\n                    chars.splice(i,1)\r\n                    this.idsOfCharsToDeleteLater.splice(j,1)\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        let changes = this.doc.addCharsAndGetChanges(chars)\r\n        return changes;\r\n    }\r\n\r\n    del(ids){\r\n        let pos0 = 1\r\n        let delPos = []\r\n        \r\n        for(let id of ids){\r\n            let pos = this.doc.getPosOfCharWithIdStartingFrom(id, pos0)\r\n            if(pos != null){\r\n                delPos.push(pos)\r\n                pos0 = pos\r\n            }\r\n            else\r\n                this.idsOfCharsToDeleteLater.push(id)\r\n        }\r\n\r\n        let changes = []\r\n        let prevUsedPos = null\r\n        let delPosRange = {start: null, end:null}\r\n        for(let i=delPos.length-1; i>=0; --i){\r\n            let pos = delPos[i]\r\n            if(prevUsedPos === pos + 1 || delPosRange.start == null)\r\n                delPosRange = this.extendRange(delPosRange, pos)\r\n            else{\r\n                let change = {type: \"del\", from: delPosRange.start - 1, to: delPosRange.end - 1}\r\n                changes.push(change)\r\n                delPosRange = {start: pos, end: pos}\r\n            }\r\n            if(i==0 && delPosRange.start != null){\r\n                let change = {type: \"del\", from: delPosRange.start-1, to: delPosRange.end-1}\r\n                changes.push(change)\r\n            }\r\n            prevUsedPos = pos;\r\n        }\r\n\r\n        for(let i = delPos.length - 1; i >= 0; --i)\r\n            this.doc.delChar(delPos[i])     \r\n        \r\n        return changes\r\n    }\r\n\r\n    extendRange(range, pos){\r\n        return range.start == null ? {start: pos, end: pos} : {start: pos, end: range.end} \r\n    }\r\n\r\n    createRemoteDelCommand(delIds){\r\n        let remoteDelCommand = new RemoteCommand();\r\n        remoteDelCommand.makeDelCommand(delIds, this.session);\r\n        return remoteDelCommand\r\n    }\r\n\r\n    createCharsFromStr(str, strId){\r\n        let base = this.doc.getSameBase(strId.base)\r\n        if(base == null)\r\n            base = strId.base\r\n        \r\n        let chars = []\r\n        let offset = strId.offset\r\n        for(let char of str){\r\n            chars.push(new Char(char, new CharId(base, offset)))\r\n            ++offset\r\n        }\r\n        return chars;\r\n    }\r\n\r\n    insertIntoDocument(str, pos){\r\n        if(this.canInsertAppended(str, pos))\r\n            this.doc.insertStrAppended(str, pos)\r\n        else if(this.canInsertPrepended(str, pos))\r\n            this.doc.insertStrPrepended(str, pos)\r\n        else\r\n            this.doc.insertStringWithNewBase(str, pos, this.generateBaseAtPos(pos))\r\n    }\r\n\r\n    canInsertAppended(str, pos){\r\n        let charWeAppendTo = this.doc.getCharAtPos(pos - 1)\r\n        return this.isSameSession(charWeAppendTo)\r\n            && this.isHighestOffsetInBase(charWeAppendTo)\r\n            && this.isSpaceInBaseAfter(charWeAppendTo, str.length)\r\n            && this.isNotGoingToOverlapAfterApp(str, pos)\r\n    }\r\n\r\n    isNotGoingToOverlapAfterApp(str, pos){\r\n        let prevCharId = this.doc.getIdOfCharAtPos(pos-1)\r\n        let nextCharId = this.doc.getIdOfCharAtPos(pos)\r\n        let lastIdOfAppStr = prevCharId.copy\r\n        lastIdOfAppStr.offset += str.length\r\n        return !lastIdOfAppStr.isBigger(nextCharId)\r\n    }\r\n\r\n    canInsertPrepended(str, pos){\r\n        let charWePrependTo = this.doc.getCharAtPos(pos)\r\n        return this.isSameSession(charWePrependTo)\r\n            && this.isLowestOffsetInBase(charWePrependTo)\r\n            && this.isSpaceInBaseBefore(charWePrependTo, str.length)\r\n            && this.isNotGoingToOverlapAfterPrep(str, pos)\r\n    }\r\n    \r\n    isNotGoingToOverlapAfterPrep(str, pos){\r\n        let prevCharId = this.doc.getIdOfCharAtPos(pos-1)\r\n        let nextCharId = this.doc.getIdOfCharAtPos(pos)\r\n        let firstIdOfPrepStr = nextCharId.copy\r\n        firstIdOfPrepStr.offset -= str.length\r\n        return !prevCharId.isBigger(firstIdOfPrepStr)\r\n    }\r\n\r\n    isSameSession(char){\r\n        return char.id.base.sessionId == this.sessionId\r\n    }\r\n\r\n    isHighestOffsetInBase(char){\r\n        return char.id.offset == char.id.base.maxUsedOffset\r\n    }\r\n\r\n    isLowestOffsetInBase(char){\r\n        return char.id.offset == char.id.base.minUsedOffset\r\n    }\r\n\r\n    isSpaceInBaseAfter(char, spaceLength){\r\n        return char.id.offset + spaceLength < MAX_BASE_EL\r\n    }\r\n\r\n    isSpaceInBaseBefore(char, spaceLength){\r\n        return char.id.offset - spaceLength > MIN_BASE_EL\r\n    }\r\n\r\n    createRemoteAddCommand(str, pos){\r\n        let addId = this.doc.getCharAtPos(pos).id.copy\r\n        let remoteAddCommand = new RemoteCommand();\r\n        remoteAddCommand.makeAddCommand(str, addId, this.sessionId)\r\n        return remoteAddCommand\r\n    }\r\n\r\n    generateBaseAtPos(pos){\r\n        let idLow = this.doc.getIdOfCharAtPos(pos - 1).fullId\r\n        let idHigh = this.doc.getIdOfCharAtPos(pos).fullId\r\n        let low = idLow[0]\r\n        let high = idHigh[0]\r\n        let base = new Base([], this.sessionId, ++this.clock)\r\n\r\n        for (let i = 1; high - low < 2; ++i) {\r\n            base.main.push(low)\r\n            low = (i < idLow.length ? idLow[i] : MIN_BASE_EL)\r\n            high = (i < idHigh.length ? idHigh[i] : MAX_BASE_EL)\r\n        }\r\n        base.main.push(this.getRandomElementBetween(low + 1, high - 1))\r\n        return base\r\n    }\r\n\r\n    getRandomElementBetween(low, high){\r\n        return Math.floor(Math.random() * (high - low + 1)) + low;\r\n    }\r\n\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/Main/Algorithm.js\n **/"],"sourceRoot":""}